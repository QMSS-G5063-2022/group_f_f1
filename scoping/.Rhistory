knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(stringr)
library(ggplot2)
library(magrittr)
library(plotly)
library(dplyr)
library(tidymodels)
setwd("/Users/nikkigerjarusak/Documents/GitHub/group_f_f1")
constructors <- read.csv("/Users/nikkigerjarusak/Documents/GitHub/group_f_f1/raw_data/constructors.csv")
standings <- read.csv("/Users/nikkigerjarusak/Documents/GitHub/group_f_f1/raw_data/constructor_standings.csv")
results <- read.csv("/Users/nikkigerjarusak/Documents/GitHub/group_f_f1/raw_data/results.csv")
races <- read.csv("/Users/nikkigerjarusak/Documents/GitHub/group_f_f1/raw_data/races.csv")
circuits <- read.csv("/Users/nikkigerjarusak/Documents/GitHub/group_f_f1/raw_data/circuits.csv")
status <- read.csv("/Users/nikkigerjarusak/Documents/GitHub/group_f_f1/raw_data/status2.csv")
## merge data frames
df <- left_join(constructors, standings, by = "constructorId")
df <- left_join(df, races, by = "raceId")
## first subset
df <- subset(df, select= c(constructorId, constructorRef, name.x, constructorStandingsId,
raceId, points, position, year, circuitId, name.y, wins))
## subset results
##results <- subset(results, select = c(constructorId, statusId))
## merge again with results to get standingId
## df <- left_join(df, results, by = "constructorId")
c_winnings <- df %>%
group_by(constructorId, name.x) %>%
summarize(totalwins = sum(wins)) %>%
arrange(desc(totalwins)) %>%
filter(totalwins != 0)
win_plot <- ggplot(c_winnings, aes(x = name.x, y = totalwins, fill = name.x)) +
geom_bar(position = "dodge", stat = "identity") +  theme(axis.text.x = element_text(angle = 45)) +
labs (x = "Constructors", y = "Number of Wins",
title = "All Time Wins by Constructor")
ggplotly(win_plot)
top_c_wins <- c_winnings %>%
ungroup %>%
slice(1:10)
top_win_plot <- ggplot(top_c_wins, aes(x = name.x, y = totalwins, fill = name.x)) +
geom_bar(position = "dodge", stat = "identity") +  theme(axis.text.x = element_text(angle = 45)) +
labs (x = "Constructors", y = "Number of Wins",
title = "All Time Top 10 Winningest Constructors")
ggplotly(top_win_plot)
total_points <- df %>%
group_by(constructorId, name.x) %>%
summarize(totalpoints = sum(points)) %>%
arrange(desc(totalpoints)) %>%
filter(totalpoints > 700)
average_points <- df %>%
group_by(constructorId, name.x) %>%
summarize(avg_points = mean(points)) %>%
arrange(desc(avg_points)) %>%
filter(avg_points > 10)
total_plot <- ggplot(total_points, aes(x = name.x, y = totalpoints, fill = name.x)) +
geom_bar(position = "dodge", stat = "identity") +  theme(axis.text.x = element_text(angle = 45)) +
labs (x = "Constructors", y = "Total Points",
title = "All Time Total Points Earned by Constructor")
ggplotly(total_plot)
# top 10 constructors by total points earned
top_points <- total_points %>%
ungroup %>%
slice(1:10)
top_points_plot <- ggplot(top_points, aes(x = name.x, y = totalpoints, fill = name.x)) +
geom_bar(position = "dodge", stat = "identity") +  theme(axis.text.x = element_text(angle = 45)) +
labs (x = "Constructors", y = "Total Points",
title = "Top 10 Constructors of All Time by Points")
ggplotly(top_points_plot)
avg_points_plot <- ggplot(average_points, aes(x = name.x, y = avg_points, fill = name.x)) +
geom_bar(position = "dodge", stat = "identity") +  theme(axis.text.x = element_text(angle = 45)) +
labs (x = "Constructors", y = "Average Points",
title = "All Time Average Points Earned by Constructor")
ggplotly(avg_points_plot)
## top 10 constructors by average points
top_avg_points <- average_points %>%
ungroup %>%
slice(1:10)
top_avg_plot <- ggplot(top_avg_points, aes(x = name.x, y = avg_points, fill = name.x)) +
geom_bar(position = "dodge", stat = "identity") +  theme(axis.text.x = element_text(angle = 45)) +
labs (x = "Constructors", y = "Average Points",
title = "Top 10 Constructors of All Time by Average Points Earned")
ggplotly(top_avg_plot)
