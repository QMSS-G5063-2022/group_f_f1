status2 <- read.csv("raw_data/status2.csv")
cstandings <- read.csv("raw_data/constructor_standings.csv")
#helper tables
xover <-
results %>%
left_join(races, by = ("raceId")) #%>%
# filter(year == 2019 | year == 2021) %>%
# select(driverId, constructorId, year) %>%
# left_join(drivers, by = ("driverId")) %>%
# left_join(constructors, by = ("constructorId")) %>%
# mutate(full_name = paste(forename, surname)) %>%
# rename(constructor_name = name) %>%
# select(driverId, full_name, constructorId, constructor_name, year) %>%
# group_by(driverId, full_name, constructorId, constructor_name, year) %>%
# slice(1)
# xover$full_name <- iconv(xover$full_name, from="UTF-8", to="LATIN1")
#
# xover_total <- xover %>%
#   arrange(year,constructor_name,driverId) %>%
#   group_by(year,constructor_name) %>%
#   mutate(rn=row_number()) %>%
#   ungroup() %>%
#   mutate(line_type=case_when(
#     rn==1 ~ 'solid',
#     rn==2 ~ 'dashed',
#     rn==3 ~ 'dotted')) %>%
#   mutate(colorcol=case_when(
#     constructor_name=='Alfa Romeo' ~ '#B12039',
#     constructor_name=='AlphaTauri' ~ '#4E7C9B',
#     constructor_name=='Alpine F1 Team' ~ '#2293D1',
#     constructor_name=='Aston Martin' ~ '#2D826D',
#     constructor_name=='Ferrari' ~ '#ED1C24',
#     constructor_name=='McLaren' ~ '#F58020',
#     constructor_name=='Mercedes' ~ '#6CD3BF',
#     constructor_name=='Red Bull' ~ '#1E5BC6',
#     constructor_name=='Williams' ~ '#37BEDD',
#     constructor_name=='Haas F1 Team' ~ '#B6BABD',
#     constructor_name=='Racing Point' ~ '#F596C8',
#     constructor_name=='Renault' ~ '#FFF500',
#     constructor_name=='Toro Rosso' ~ '#469BFF'
# ))
#
# circuits_joined <- circuits %>%
#                   left_join(circuit_type) %>%
#                   rename(circuit_name = name)
#
# circuits_by_year <- races %>%
#   select(raceId, year, circuitId, name) %>%
#   rename(race_name = name) %>%
#   left_join(circuits_joined, by = c("circuitId")) %>%
#   mutate(circuit_type =
#            case_when(street_circuit == 1 ~ "street",
#                      road_circuit == 1 ~ "street",
#                      race_circuit == 1 ~ "race",
#                      )
#          ) %>%
#   select(year, circuitId, circuit_name, circuit_type)
#
# skinny_races_circuits <- races %>%
#   rename(race_name = name) %>%
#   select(raceId, circuitId, race_name, year)
library(tidyverse)
#library(dplyr)
library(stringr)
library(ggplot2)
library(magrittr)
library(htmltools)
library(ggplot2)
library(ggthemes)
library(DT)
library(leaflet)
library(leaflet.extras)
library(sf)
library(rgdal) # for reading shape files into R
library(rgeos)
library(maps)
library(crosstalk)
library(vembedr)
library(tidyr)
library(networkD3)
library(plotly)
# read in data
drivers <- read.csv("raw_data/drivers.csv")
qps <- read.csv("raw_data/qualifying.csv")
pitstops <- read.csv("raw_data/pit_stops.csv")
standings <- read.csv("raw_data/driver_standings.csv")
races <- read.csv("raw_data/races.csv")
results <- read.csv("raw_data/results.csv")
constructors <- read.csv("raw_data/constructors.csv")
qualifying <- read.csv("raw_data/qualifying.csv")
circuits <- read.csv("raw_data/circuits.csv")
circuit_type <- read.csv("raw_data/circuit_type.csv")
lap_times <- read.csv("raw_data/lap_times.csv")
status2 <- read.csv("raw_data/status2.csv")
cstandings <- read.csv("raw_data/constructor_standings.csv")
#helper tables
xover <-
results %>%
left_join(races, by = ("raceId")) #%>%
filter(year == 2019 | year == 2021) %>%
select(driverId, constructorId, year) %>%
left_join(drivers, by = ("driverId")) %>%
left_join(constructors, by = ("constructorId")) %>%
mutate(full_name = paste(forename, surname)) %>%
rename(constructor_name = name) %>%
select(driverId, full_name, constructorId, constructor_name, year) %>%
group_by(driverId, full_name, constructorId, constructor_name, year) %>%
slice(1)
#helper tables
xover <-
results %>%
left_join(races, by = ("raceId")) %>%
filter(year == 2019 | year == 2021) %>%
select(driverId, constructorId, year) %>%
left_join(drivers, by = ("driverId")) %>%
left_join(constructors, by = ("constructorId")) %>%
mutate(full_name = paste(forename, surname)) %>%
rename(constructor_name = name) %>%
select(driverId, full_name, constructorId, constructor_name, year) %>%
group_by(driverId, full_name, constructorId, constructor_name, year) %>%
slice(1)
# xover$full_name <- iconv(xover$full_name, from="UTF-8", to="LATIN1")
#
# xover_total <- xover %>%
#   arrange(year,constructor_name,driverId) %>%
#   group_by(year,constructor_name) %>%
#   mutate(rn=row_number()) %>%
#   ungroup() %>%
#   mutate(line_type=case_when(
#     rn==1 ~ 'solid',
#     rn==2 ~ 'dashed',
#     rn==3 ~ 'dotted')) %>%
#   mutate(colorcol=case_when(
#     constructor_name=='Alfa Romeo' ~ '#B12039',
#     constructor_name=='AlphaTauri' ~ '#4E7C9B',
#     constructor_name=='Alpine F1 Team' ~ '#2293D1',
#     constructor_name=='Aston Martin' ~ '#2D826D',
#     constructor_name=='Ferrari' ~ '#ED1C24',
#     constructor_name=='McLaren' ~ '#F58020',
#     constructor_name=='Mercedes' ~ '#6CD3BF',
#     constructor_name=='Red Bull' ~ '#1E5BC6',
#     constructor_name=='Williams' ~ '#37BEDD',
#     constructor_name=='Haas F1 Team' ~ '#B6BABD',
#     constructor_name=='Racing Point' ~ '#F596C8',
#     constructor_name=='Renault' ~ '#FFF500',
#     constructor_name=='Toro Rosso' ~ '#469BFF'
# ))
#
# circuits_joined <- circuits %>%
#                   left_join(circuit_type) %>%
#                   rename(circuit_name = name)
#
# circuits_by_year <- races %>%
#   select(raceId, year, circuitId, name) %>%
#   rename(race_name = name) %>%
#   left_join(circuits_joined, by = c("circuitId")) %>%
#   mutate(circuit_type =
#            case_when(street_circuit == 1 ~ "street",
#                      road_circuit == 1 ~ "street",
#                      race_circuit == 1 ~ "race",
#                      )
#          ) %>%
#   select(year, circuitId, circuit_name, circuit_type)
#
# skinny_races_circuits <- races %>%
#   rename(race_name = name) %>%
#   select(raceId, circuitId, race_name, year)
#helper tables
xover <-
results %>%
left_join(races, by = ("raceId")) %>%
filter(year == 2019 | year == 2021) %>%
select(driverId, constructorId, year) %>%
left_join(drivers, by = ("driverId")) %>%
left_join(constructors, by = ("constructorId")) %>%
mutate(full_name = paste(forename, surname)) %>%
rename(constructor_name = name) %>%
select(driverId, full_name, constructorId, constructor_name, year) %>%
group_by(driverId, full_name, constructorId, constructor_name, year) %>%
slice(1)
xover$full_name <- iconv(xover$full_name, from="UTF-8", to="LATIN1")
xover_total <- xover %>%
arrange(year,constructor_name,driverId) %>%
group_by(year,constructor_name) %>%
mutate(rn=row_number()) %>%
ungroup() %>%
mutate(line_type=case_when(
rn==1 ~ 'solid',
rn==2 ~ 'dashed',
rn==3 ~ 'dotted')) %>%
mutate(colorcol=case_when(
constructor_name=='Alfa Romeo' ~ '#B12039',
constructor_name=='AlphaTauri' ~ '#4E7C9B',
constructor_name=='Alpine F1 Team' ~ '#2293D1',
constructor_name=='Aston Martin' ~ '#2D826D',
constructor_name=='Ferrari' ~ '#ED1C24',
constructor_name=='McLaren' ~ '#F58020',
constructor_name=='Mercedes' ~ '#6CD3BF',
constructor_name=='Red Bull' ~ '#1E5BC6',
constructor_name=='Williams' ~ '#37BEDD',
constructor_name=='Haas F1 Team' ~ '#B6BABD',
constructor_name=='Racing Point' ~ '#F596C8',
constructor_name=='Renault' ~ '#FFF500',
constructor_name=='Toro Rosso' ~ '#469BFF'
))
circuits_joined <- circuits %>%
left_join(circuit_type) %>%
rename(circuit_name = name)
circuits_by_year <- races %>%
select(raceId, year, circuitId, name) %>%
rename(race_name = name) %>%
left_join(circuits_joined, by = c("circuitId")) %>%
mutate(circuit_type =
case_when(street_circuit == 1 ~ "street",
road_circuit == 1 ~ "street",
race_circuit == 1 ~ "race",
)
) %>%
select(year, circuitId, circuit_name, circuit_type)
skinny_races_circuits <- races %>%
rename(race_name = name) %>%
select(raceId, circuitId, race_name, year)
circuits_type_df <- circuit_type %>%
mutate(circuit_type =
case_when(
street_circuit == 1 ~ "street",
road_circuit == 1 ~ "road",
race_circuit == 1 ~ "race"
)
) %>%
dplyr::select(circuitId, circuit_type) %>%
arrange(circuitId)
circuits_df <- circuits %>%
mutate(information = paste("<a target='_blank' href='", url,"'>link</a>")) %>%
dplyr::select(circuitId, name, location, country, lat, lng, alt, information) %>%
arrange(country, location, name)
circuits_df$country <-
ifelse(circuits_df$country == "America", "United States", circuits_df$country)
circuits_df$country <-
ifelse(circuits_df$country == "USA", "United States", circuits_df$country)
circuits_df <- circuits_df %>%
left_join(circuits_type_df, by = "circuitId") %>%
dplyr::select(
circuitId, name, location, country,
circuit_type, lat, lng, alt, information
) %>%
arrange(country, location, name)
country_sd <- crosstalk::SharedData$new(circuits_df)
map <- leaflet() %>%
addProviderTiles(providers$CartoDB.Voyager) %>%
addMarkers(data = country_sd,
lat = ~lat, lng = ~lng,
icon = list(
iconUrl = 'track-icon-19.png',
iconSize = c(25, 25)
),
popup = ~paste("<b>", name, "</b><br/><i>Type</i>: ", circuit_type, "<br/><i>Location</i>: ", location, ", ", country, "<br/><i>GPS</i>: (", lat, ",", lng, ",", alt, ")", sep = ""))
bscols(map)
bscols(
filter_select("CountrySelector", "Country Circuit Selector:", country_sd, ~country)
)
library(tidyverse)
#library(dplyr)
library(stringr)
library(ggplot2)
library(magrittr)
library(htmltools)
library(ggplot2)
library(ggthemes)
library(DT)
library(leaflet)
library(leaflet.extras)
library(sf)
library(rgdal) # for reading shape files into R
library(rgeos)
library(maps)
library(crosstalk)
library(vembedr)
library(tidyr)
library(networkD3)
library(plotly)
# read in data
drivers <- read.csv("raw_data/drivers.csv")
qps <- read.csv("raw_data/qualifying.csv")
pitstops <- read.csv("raw_data/pit_stops.csv")
standings <- read.csv("raw_data/driver_standings.csv")
races <- read.csv("raw_data/races.csv")
results <- read.csv("raw_data/results.csv")
constructors <- read.csv("raw_data/constructors.csv")
qualifying <- read.csv("raw_data/qualifying.csv")
circuits <- read.csv("raw_data/circuits.csv")
circuit_type <- read.csv("raw_data/circuit_type.csv")
lap_times <- read.csv("raw_data/lap_times.csv")
status2 <- read.csv("raw_data/status2.csv")
cstandings <- read.csv("raw_data/constructor_standings.csv")
#helper tables
xover <-
results %>%
left_join(races, by = ("raceId")) %>%
filter(year == 2019 | year == 2021) %>%
select(driverId, constructorId, year) %>%
left_join(drivers, by = ("driverId")) %>%
left_join(constructors, by = ("constructorId")) %>%
mutate(full_name = paste(forename, surname)) %>%
rename(constructor_name = name) %>%
select(driverId, full_name, constructorId, constructor_name, year) %>%
group_by(driverId, full_name, constructorId, constructor_name, year) %>%
slice(1)
xover$full_name <- iconv(xover$full_name, from="UTF-8", to="LATIN1")
xover_total <- xover %>%
arrange(year,constructor_name,driverId) %>%
group_by(year,constructor_name) %>%
mutate(rn=row_number()) %>%
ungroup() %>%
mutate(line_type=case_when(
rn==1 ~ 'solid',
rn==2 ~ 'dashed',
rn==3 ~ 'dotted')) %>%
mutate(colorcol=case_when(
constructor_name=='Alfa Romeo' ~ '#B12039',
constructor_name=='AlphaTauri' ~ '#4E7C9B',
constructor_name=='Alpine F1 Team' ~ '#2293D1',
constructor_name=='Aston Martin' ~ '#2D826D',
constructor_name=='Ferrari' ~ '#ED1C24',
constructor_name=='McLaren' ~ '#F58020',
constructor_name=='Mercedes' ~ '#6CD3BF',
constructor_name=='Red Bull' ~ '#1E5BC6',
constructor_name=='Williams' ~ '#37BEDD',
constructor_name=='Haas F1 Team' ~ '#B6BABD',
constructor_name=='Racing Point' ~ '#F596C8',
constructor_name=='Renault' ~ '#FFF500',
constructor_name=='Toro Rosso' ~ '#469BFF'
))
circuits_joined <- circuits %>%
left_join(circuit_type) %>%
rename(circuit_name = name)
circuits_by_year <- races %>%
select(raceId, year, circuitId, name) %>%
rename(race_name = name) %>%
left_join(circuits_joined, by = c("circuitId")) %>%
mutate(circuit_type =
case_when(street_circuit == 1 ~ "street",
road_circuit == 1 ~ "street",
race_circuit == 1 ~ "race",
)
) %>%
select(year, circuitId, circuit_name, circuit_type)
skinny_races_circuits <- races %>%
rename(race_name = name) %>%
select(raceId, circuitId, race_name, year)
drivers_df <- drivers
drivers_df$number <-
ifelse(drivers_df$number == "\\N", "", drivers_df$number)
drivers_df$code <-
ifelse(drivers_df$code == "\\N", "", drivers_df$code)
drivers_df <- drivers_df %>%
mutate(information = paste("<a target='_blank' href='", url,"'>link</a>")) %>%
mutate(driver_number = number, driver_code = code) %>%
mutate(firstname = forename, lastname = surname, birth_date = dob) %>%
dplyr::select(driverId, firstname, lastname, birth_date,
driver_number, driver_code, nationality, information
) %>%
arrange(nationality, lastname, firstname, birth_date, driver_number)
#View(drivers_df)
datatable(drivers_df,
class = 'cell-border stripe',
#colnames = c("name", "nationality"),
options = list(
pageLength = 5,
columnDefs = list(list(visible=FALSE, targets=c("driverId"))),
#buttons = c('csv')
),
escape = FALSE
)
drivers_df <- drivers
drivers_df$number <-
ifelse(drivers_df$number == "\\N", "", drivers_df$number)
drivers_df$code <-
ifelse(drivers_df$code == "\\N", "", drivers_df$code)
drivers_df <- drivers_df %>%
mutate(information = paste("<a target='_blank' href='", url,"'>link</a>")) %>%
mutate(driver_number = number, driver_code = code) %>%
mutate(firstname = forename, lastname = surname, birth_date = dob) %>%
dplyr::select(driverId, firstname, lastname, birth_date,
driver_number, driver_code, nationality, information
) %>%
arrange(nationality, lastname, firstname, birth_date, driver_number)
#View(drivers_df)
datatable(drivers_df,
class = 'cell-border stripe',
#colnames = c("name", "nationality"),
options = list(
pageLength = 5,
columnDefs = list(list(visible=FALSE, targets=c("driverId")))#,
#buttons = c('csv')
),
escape = FALSE
)
drivers_df <- drivers
drivers_df$number <-
ifelse(drivers_df$number == "\\N", "", drivers_df$number)
drivers_df$code <-
ifelse(drivers_df$code == "\\N", "", drivers_df$code)
drivers_df <- drivers_df %>%
mutate(information = paste("<a target='_blank' href='", url,"'>link</a>")) %>%
mutate(driver_number = number, driver_code = code) %>%
mutate(firstname = forename, lastname = surname, birth_date = dob) %>%
dplyr::select(driverId, firstname, lastname, birth_date,
driver_number, driver_code, nationality, information
) %>%
arrange(nationality, lastname, firstname, birth_date, driver_number)
#View(drivers_df)
datatable(drivers_df,
class = 'cell-border stripe',
#colnames = c("name", "nationality"),
options = list(
pageLength = 5,
columnDefs = list(list(visible=FALSE, targets=c("driverId"))),
dom = 'Bfrtrip',
buttons = c('csv') # 'copy',
),
escape = FALSE
)
library(tidyverse)
# library(stringr)
# library(magrittr)
# library(htmltools)
library(ggplot2)
# library(ggthemes)
library(DT)
library(leaflet)
library(leaflet.extras)
# library(sf)
# library(rgdal) # for reading shape files into R
# library(rgeos)
# library(maps)
library(crosstalk)
# library(vembedr)
# library(tidyr)
# library(networkD3)
# library(plotly)
library(tidyverse)
# library(stringr)
# library(magrittr)
library(htmltools)
library(ggplot2)
library(ggthemes)
library(DT)
library(leaflet)
library(leaflet.extras)
# library(sf)
# library(rgdal) # for reading shape files into R
# library(rgeos)
# library(maps)
library(crosstalk)
library(vembedr)
# library(tidyr)
# library(networkD3)
library(plotly)
drivers_df <- drivers
drivers_df$number <-
ifelse(drivers_df$number == "\\N", "", drivers_df$number)
drivers_df$code <-
ifelse(drivers_df$code == "\\N", "", drivers_df$code)
drivers_df <- drivers_df %>%
mutate(information = paste("<a target='_blank' href='", url,"'>link</a>")) %>%
mutate(driver_number = number, driver_code = code) %>%
mutate(firstname = forename, lastname = surname, birth_date = dob) %>%
dplyr::select(driverId, firstname, lastname, birth_date,
driver_number, driver_code, nationality, information
) %>%
arrange(nationality, lastname, firstname, birth_date, driver_number)
#View(drivers_df)
datatable(drivers_df,
class = 'cell-border stripe',
#colnames = c("name", "nationality"),
caption = 'Table 3: Drivers',
options = list(
pageLength = 5,
columnDefs = list(list(visible=FALSE, targets=c("driverId")))
),
escape = FALSE
)
# drivers_df <- drivers
# drivers_df$number <-
#   ifelse(drivers_df$number == "\\N", "", drivers_df$number)
#
# drivers_df$code <-
#   ifelse(drivers_df$code == "\\N", "", drivers_df$code)
#
# drivers_df <- drivers_df %>%
#   mutate(information = paste("<a target='_blank' href='", url,"'>link</a>")) %>%
#   mutate(driver_number = number, driver_code = code) %>%
#   mutate(firstname = forename, lastname = surname, birth_date = dob) %>%
#   dplyr::select(driverId, firstname, lastname, birth_date,
#     driver_number, driver_code, nationality, information
#   ) %>%
#   arrange(nationality, lastname, firstname, birth_date, driver_number)
#
# #View(drivers_df)
#
# datatable(drivers_df,
#   class = 'cell-border stripe',
#   #colnames = c("name", "nationality"),
#   options = list(
#     pageLength = 5,
#     columnDefs = list(list(visible=FALSE, targets=c("driverId"))),
#     dom = 'Bfrtrip',
#     buttons = c('csv') # 'copy',
#   ),
#   escape = FALSE
# )
