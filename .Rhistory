circuit_type <- read.csv("raw_data/circuit_type.csv")
lap_times <- read.csv("raw_data/lap_times.csv")
status2 <- read.csv("raw_data/status2.csv")
cstandings <- read.csv("raw_data/constructor_standings.csv")
#helper tables
xover <-
results %>%
left_join(races, by = ("raceId")) %>%
filter(year == 2019 | year == 2021) %>%
select(driverId, constructorId, year) %>%
left_join(drivers, by = ("driverId")) %>%
left_join(constructors, by = ("constructorId")) %>%
mutate(full_name = paste(forename, surname)) %>%
rename(constructor_name = name) %>%
select(driverId, full_name, constructorId, constructor_name, year) %>%
group_by(driverId, full_name, constructorId, constructor_name, year) %>%
slice(1)
xover$full_name <- iconv(xover$full_name, from="UTF-8", to="LATIN1")
xover_total <- xover %>%
arrange(year,constructor_name,driverId) %>%
group_by(year,constructor_name) %>%
mutate(rn=row_number()) %>%
ungroup() %>%
mutate(line_type=case_when(
rn==1 ~ 'solid',
rn==2 ~ 'dashed',
rn==3 ~ 'dotted')) %>%
mutate(colorcol=case_when(
constructor_name=='Alfa Romeo' ~ '#B12039',
constructor_name=='AlphaTauri' ~ '#4E7C9B',
constructor_name=='Alpine F1 Team' ~ '#2293D1',
constructor_name=='Aston Martin' ~ '#2D826D',
constructor_name=='Ferrari' ~ '#ED1C24',
constructor_name=='McLaren' ~ '#F58020',
constructor_name=='Mercedes' ~ '#6CD3BF',
constructor_name=='Red Bull' ~ '#1E5BC6',
constructor_name=='Williams' ~ '#37BEDD',
constructor_name=='Haas F1 Team' ~ '#B6BABD',
constructor_name=='Racing Point' ~ '#F596C8',
constructor_name=='Renault' ~ '#FFF500',
constructor_name=='Toro Rosso' ~ '#469BFF'
))
circuits_joined <- circuits %>%
left_join(circuit_type) %>%
rename(circuit_name = name)
circuits_by_year <- races %>%
select(raceId, year, circuitId, name) %>%
rename(race_name = name) %>%
left_join(circuits_joined, by = c("circuitId")) %>%
mutate(circuit_type =
case_when(street_circuit == 1 ~ "street",
road_circuit == 1 ~ "street",
race_circuit == 1 ~ "race",
)
) %>%
select(year, circuitId, circuit_name, circuit_type)
skinny_races_circuits <- races %>%
rename(race_name = name) %>%
select(raceId, circuitId, race_name, year)
knitr::opts_chunk$set(echo = TRUE)
circuits_type_df <- read_csv("../raw_data/circuit_type.csv")
circuits_type_df <- circuits_type_df %>%
mutate(circuit_type =
case_when(
street_circuit == 1 ~ "street",
road_circuit == 1 ~ "road",
race_circuit == 1 ~ "race"
)
) %>%
dplyr::select(circuitId, circuit_type) %>%
arrange(circuitId)
#View(circuits_type_df)
circuits_df <- read_csv("../raw_data/circuits.csv")
circuits_df <- circuits_df %>%
mutate(information = paste("<a target='_blank' href='", url,"'>link</a>")) %>%
dplyr::select(circuitId, name, location, country, lat, lng, alt, information) %>%
arrange(country, location, name)
circuits_df$country <-
ifelse(circuits_df$country == "America", "United States", circuits_df$country)
circuits_df$country <-
ifelse(circuits_df$country == "USA", "United States", circuits_df$country)
circuits_df <- circuits_df %>%
left_join(circuits_type_df, by = "circuitId") %>%
dplyr::select(
circuitId, name, location, country,
circuit_type, lat, lng, alt, information
) %>%
arrange(country, location, name)
#View(circuits_df)
##circuits_us_df <- circuits_df %>%
##  filter(country == "United States")
##View(circuits_us_df)
datatable(circuits_df,
class = 'cell-border stripe',
#colnames = c("Name", "Location", "Country"),
caption = 'Table 1: Circuits',
extensions = 'Buttons',
options = list(
pageLength = 5,
columnDefs = list(list(visible=FALSE, targets=c("circuitId", "lat", "lng", "alt"))),
dom = 'Bfrtrip',
buttons = c('csv') # 'copy',
),
escape = FALSE
)
wins_2021 <- ggplot(races2021) +
geom_line(aes(x=date,y=position,group=full_name,color=full_name,linetype=full_name,text=paste("<b>Driver: </b>",full_name,"<br><b>Team: ",constructor_name))) + scale_color_manual(values=xover_2021$colorcol)+ scale_linetype_manual(values=xover_2021$line_type) + coord_flip() + ggtitle("2021") + theme_classic() + labs(x = "Date", y = "Position")
library(tidyverse)
library(stringr)
library(ggplot2)
library(magrittr)
library(htmltools)
library(ggplot2)
library(ggthemes)
library(DT)
library(leaflet)
library(leaflet.extras)
library(sf)
library(rgdal) # for reading shape files into R
library(rgeos)
library(maps)
library(crosstalk)
library(vembedr)
library(tidyr)
library(networkD3)
library(plotly)
# read in data
drivers <- read.csv("raw_data/drivers.csv")
qps <- read.csv("raw_data/qualifying.csv")
pitstops <- read.csv("raw_data/pit_stops.csv")
standings <- read.csv("raw_data/driver_standings.csv")
races <- read.csv("raw_data/races.csv")
results <- read.csv("raw_data/results.csv")
constructors <- read.csv("raw_data/constructors.csv")
qualifying <- read.csv("raw_data/qualifying.csv")
circuits <- read.csv("raw_data/circuits.csv")
circuit_type <- read.csv("raw_data/circuit_type.csv")
lap_times <- read.csv("raw_data/lap_times.csv")
status2 <- read.csv("raw_data/status2.csv")
cstandings <- read.csv("raw_data/constructor_standings.csv")
#helper tables
xover <-
results %>%
left_join(races, by = ("raceId")) %>%
filter(year == 2019 | year == 2021) %>%
select(driverId, constructorId, year) %>%
left_join(drivers, by = ("driverId")) %>%
left_join(constructors, by = ("constructorId")) %>%
mutate(full_name = paste(forename, surname)) %>%
rename(constructor_name = name) %>%
select(driverId, full_name, constructorId, constructor_name, year) %>%
group_by(driverId, full_name, constructorId, constructor_name, year) %>%
slice(1)
xover$full_name <- iconv(xover$full_name, from="UTF-8", to="LATIN1")
xover_total <- xover %>%
arrange(year,constructor_name,driverId) %>%
group_by(year,constructor_name) %>%
mutate(rn=row_number()) %>%
ungroup() %>%
mutate(line_type=case_when(
rn==1 ~ 'solid',
rn==2 ~ 'dashed',
rn==3 ~ 'dotted')) %>%
mutate(colorcol=case_when(
constructor_name=='Alfa Romeo' ~ '#B12039',
constructor_name=='AlphaTauri' ~ '#4E7C9B',
constructor_name=='Alpine F1 Team' ~ '#2293D1',
constructor_name=='Aston Martin' ~ '#2D826D',
constructor_name=='Ferrari' ~ '#ED1C24',
constructor_name=='McLaren' ~ '#F58020',
constructor_name=='Mercedes' ~ '#6CD3BF',
constructor_name=='Red Bull' ~ '#1E5BC6',
constructor_name=='Williams' ~ '#37BEDD',
constructor_name=='Haas F1 Team' ~ '#B6BABD',
constructor_name=='Racing Point' ~ '#F596C8',
constructor_name=='Renault' ~ '#FFF500',
constructor_name=='Toro Rosso' ~ '#469BFF'
))
circuits_joined <- circuits %>%
left_join(circuit_type) %>%
rename(circuit_name = name)
circuits_by_year <- races %>%
select(raceId, year, circuitId, name) %>%
rename(race_name = name) %>%
left_join(circuits_joined, by = c("circuitId")) %>%
mutate(circuit_type =
case_when(street_circuit == 1 ~ "street",
road_circuit == 1 ~ "street",
race_circuit == 1 ~ "race",
)
) %>%
select(year, circuitId, circuit_name, circuit_type)
skinny_races_circuits <- races %>%
rename(race_name = name) %>%
select(raceId, circuitId, race_name, year)
#helper tables
xover <-
results %>%
left_join(races, by = ("raceId")) %>%
filter(year == 2019 | year == 2021) %>%
select(driverId, constructorId, year) %>%
left_join(drivers, by = ("driverId")) %>%
left_join(constructors, by = ("constructorId")) %>%
mutate(full_name = paste(forename, surname)) %>%
rename(constructor_name = name) %>%
select(driverId, full_name, constructorId, constructor_name, year) %>%
group_by(driverId, full_name, constructorId, constructor_name, year) %>%
slice(1)
xover$full_name <- iconv(xover$full_name, from="UTF-8", to="LATIN1")
xover_total <- xover %>%
arrange(year,constructor_name,driverId) %>%
group_by(year,constructor_name) %>%
mutate(rn=row_number()) %>%
ungroup() %>%
mutate(line_type=case_when(
rn==1 ~ 'solid',
rn==2 ~ 'dashed',
rn==3 ~ 'dotted')) %>%
mutate(colorcol=case_when(
constructor_name=='Alfa Romeo' ~ '#B12039',
constructor_name=='AlphaTauri' ~ '#4E7C9B',
constructor_name=='Alpine F1 Team' ~ '#2293D1',
constructor_name=='Aston Martin' ~ '#2D826D',
constructor_name=='Ferrari' ~ '#ED1C24',
constructor_name=='McLaren' ~ '#F58020',
constructor_name=='Mercedes' ~ '#6CD3BF',
constructor_name=='Red Bull' ~ '#1E5BC6',
constructor_name=='Williams' ~ '#37BEDD',
constructor_name=='Haas F1 Team' ~ '#B6BABD',
constructor_name=='Racing Point' ~ '#F596C8',
constructor_name=='Renault' ~ '#FFF500',
constructor_name=='Toro Rosso' ~ '#469BFF'
))
circuits_joined <- circuits %>%
left_join(circuit_type) %>%
rename(circuit_name = name)
circuits_by_year <- races %>%
select(raceId, year, circuitId, name) %>%
rename(race_name = name) %>%
left_join(circuits_joined, by = c("circuitId")) %>%
mutate(circuit_type =
case_when(street_circuit == 1 ~ "street",
road_circuit == 1 ~ "street",
race_circuit == 1 ~ "race",
)
) %>%
select(year, circuitId, circuit_name, circuit_type)
skinny_races_circuits <- races %>%
rename(race_name = name) %>%
select(raceId, circuitId, race_name, year)
race_standings <- left_join(standings, races, by="raceId")
driver_race_standings <- left_join(race_standings, drivers, by="driverId")
races2021 <- driver_race_standings %>% filter(year==2021)
races2019 <- driver_race_standings %>% filter(year==2019)
xover_2021 <- xover_total %>% filter(year==2021) %>% arrange(full_name)
xover_2019 <- xover_total %>% filter(year==2019) %>% arrange(full_name)
xover_2019 <- xover_2019[-c(2,16),]
xover_2019 <- xover_2019 %>% filter(driverId %in% races2019$driverId)
races2021 <- left_join(races2021, xover_2021, by="driverId")
races2019 <- left_join(races2019, xover_2019, by="driverId")
wins_2021 <- ggplot(races2021) +
geom_line(aes(x=date,y=position,group=full_name,color=full_name,linetype=full_name,text=paste("<b>Driver: </b>",full_name,"<br><b>Team: ",constructor_name))) + scale_color_manual(values=xover_2021$colorcol)+ scale_linetype_manual(values=xover_2021$line_type) + coord_flip() + ggtitle("2021") + theme_classic() + labs(x = "Date", y = "Position")
ggplotly(wins_2021, tooltip = "text")
ggplot(races2019) +
geom_line(aes(x=date,y=position,group=full_name,color=full_name,linetype=full_name)) + scale_color_manual(values=xover_2019$colorcol)+ scale_linetype_manual(values=xover_2019$line_type) + coord_flip() + ggtitle("2019") + theme_classic() + labs(x = "Date", y = "Position") + guides(color=guide_legend(ncol=2))
points_2021 <- ggplot(races2021, aes(x=date,y=points,group=full_name,color=full_name, linetype=full_name, text=paste("<b>Driver:</b> ",full_name,"<br><b>Team: </b>",constructor_name,"<br><b>Points: ",points))) + geom_point() + geom_smooth(se=FALSE) + coord_flip() +
ggtitle("2021") +
scale_linetype_manual(values=xover_2021$line_type, name="full_name") +
scale_color_manual(values=xover_2021$colorcol, name="full_name") +
theme_classic()
points_2021 <- ggplot(races2021, aes(x=date,y=points,group=full_name,color=full_name, linetype=full_name, text=paste("<b>Driver:</b> ",full_name,"<br><b>Team: </b>",constructor_name,"<br><b>Points: ",points))) + geom_point() + geom_smooth(se=FALSE) + coord_flip() +
ggtitle("2021") +
scale_linetype_manual(values=xover_2021$line_type, name="full_name") +
scale_color_manual(values=xover_2021$colorcol, name="full_name") +
theme_classic()
ggplotly(points_2021, tooltip="text")
points_2019 <- ggplot(races2019, aes(x=date,y=points,group=full_name,color=full_name, linetype=full_name,text=paste("<b>Driver:</b> ",full_name,"<br><b>Team: </b>",constructor_name,"<br><b>Points: ",points))) + geom_point() + geom_smooth(se=FALSE) + coord_flip() +
ggtitle("2019") +
scale_linetype_manual(values=xover_2019$line_type, name="full_name") +
scale_color_manual(values=xover_2019$colorcol, name="full_name") + theme_classic() +
labs (x = "Date", y = "Total Points") +
guides(linetype=guide_legend(ncol=2, byrow=FALSE))
ggplotly(points_2019, tooltip="text")
datatable(drivers_df,
class = 'cell-border stripe',
#colnames = c("name", "nationality"),
options = list(
pageLength = 5,
columnDefs = list(list(visible=FALSE, targets=c("driverId"))),
buttons = c('csv')
),
escape = FALSE
)
drivers_df <- drivers
drivers_df$number <-
ifelse(drivers_df$number == "\\N", "", drivers_df$number)
drivers_df$code <-
ifelse(drivers_df$code == "\\N", "", drivers_df$code)
drivers_df <- drivers_df %>%
mutate(information = paste("<a target='_blank' href='", url,"'>link</a>")) %>%
mutate(driver_number = number, driver_code = code) %>%
mutate(firstname = forename, lastname = surname, birth_date = dob) %>%
dplyr::select(driverId, firstname, lastname, birth_date,
driver_number, driver_code, nationality, information
) %>%
arrange(nationality, lastname, firstname, birth_date, driver_number)
datatable(drivers_df,
class = 'cell-border stripe',
#colnames = c("name", "nationality"),
options = list(
pageLength = 5,
columnDefs = list(list(visible=FALSE, targets=c("driverId"))),
buttons = c('csv')
),
escape = FALSE
)
knitr::opts_chunk$set(echo = TRUE)
points_21 <- season_21 %>%
group_by(constructorId, name.x) %>%
summarize(totalpoints = max(points)) %>%
arrange(desc(totalpoints)) %>%
filter(totalpoints != 0)
library(dplyr)
library(magrittr)
library(ggplot2)
library(psych)
library(stats)
setwd('~/Courses/Data Analysis/Final Project/')
d <- read.csv('anes_pilot_2020ets_csv.csv')
table(d$vote20jb)
d.sub <- d %>% filter(vote20jb < 5 & ftobama1 < 101 & hopeful < 9 & worried < 9 & irritated < 9)
d.sub <- d.sub %>% select(happy, hopeful, proud, afraid, angry, worried, irritated, nervous, outraged, ftobama1, covid1, abort2, vote20jb, race7, sex, follow)
d.sub$rec.vote20jb <- ifelse((d.sub$vote20jb==1), 0, 1)
d.sub$sex <- ifelse((d.sub$sex==1), 0, 1)
d.vars <- d.sub %>% select(happy, hopeful, proud, afraid, angry, worried, irritated, nervous, outraged)
describe(d.vars)
d.sub %>% ggplot(., aes(x=happy)) + geom_histogram(binwidth=1, color='blue',fill='white')
lm1 <- lm(vote20jb ~ happy + hopeful + proud + afraid + angry + worried + irritated + nervous + outraged, data = d.sub)
summary(lm1)
```{r echo=FALSE, message=FALSE, warning=FALSE, fig.width=10, fig.height=11}
d.sub %>% ggplot(., aes(x=outraged)) + geom_histogram(binwidth=1, color='blue',fill='white')
d.sub %>% ggplot(., aes(x=happy)) + geom_histogram(binwidth=1, color='blue',fill='white')
d.sub %>% ggplot(., aes(x=outraged)) + geom_histogram(binwidth=1, color='blue',fill='white')
d.sub %>% ggplot(., aes(x=happy)) + geom_histogram(binwidth=1, color='blue',fill='white')
d.sub %>% ggplot(., aes(x=outraged)) + geom_histogram(binwidth=1, color='blue',fill='white')
d.sub %>% ggplot(., aes(x=happy)) + geom_histogram(binwidth=1, color='blue',fill='white')
d.sub %>% ggplot(., aes(x=outraged)) + geom_histogram(binwidth=1, color='blue',fill='white')
d.sub %>% ggplot(., aes(x=happy)) + geom_histogram(binwidth=1, color='blue',fill='white')
d.sub %>% ggplot(., aes(x=outraged)) + geom_histogram(binwidth=1, color='blue',fill='white')
d.sub %>% ggplot(., aes(x=happy)) + geom_histogram(binwidth=1, color='blue',fill='white')
d.sub %>% ggplot(., aes(x=outraged)) + geom_histogram(binwidth=1, color='blue',fill='white')
d.sub %>% ggplot(., aes(x=happy)) + geom_histogram(binwidth=1, color='blue',fill='white')
library(tidyverse)
library(stringr)
#library(ggplot2)
library(magrittr)
library(htmltools)
library(ggplot2)
library(ggthemes)
library(DT)
library(leaflet)
library(leaflet.extras)
library(sf)
library(rgdal) # for reading shape files into R
library(rgeos)
library(maps)
library(crosstalk)
library(vembedr)
library(tidyr)
library(networkD3)
library(plotly)
library(patchwork)
library(tidyverse)
library(stringr)
#library(ggplot2)
library(magrittr)
library(htmltools)
library(ggplot2)
library(ggthemes)
library(DT)
library(leaflet)
library(leaflet.extras)
library(sf)
library(rgdal) # for reading shape files into R
library(rgeos)
library(maps)
library(crosstalk)
library(vembedr)
library(tidyr)
library(networkD3)
library(plotly)
library(gridExtra)
lm1 <- lm(rec.vote20jb ~ happy + hopeful + proud + afraid + angry + worried + irritated + nervous + outraged, data = d.sub)
summary(lm1)
plt.figure()
lm1.resid <- resid(lm1)
d.sub %>% gather(key = "iv", value = "x", -happy, -proud, -outraged, -angry, -afraid) %>%
ggplot(aex(x=x, y=rec.vote20jb)) +
geom_segment(aes(xend=x, yend=predicted), alpha=.2) +
geom_point(aes(color=residuals)) +
scale_color_gradient2(low="blue", mid="white", high="red") +
guides(color=FALSE) +
geom_point(aes(y=predicted), shape=1) +
theme_bw()
d.sub$predictedlm1 <- predict(lm1)
d.sub$residualslm1 <- residuals(lm1)
d.sub %>% gather(key = "iv", value = "x", -happy, -proud, -outraged, -angry, -afraid) %>%
ggplot(aes(x=x, y=rec.vote20jb)) +
geom_segment(aes(xend=x, yend=predicted), alpha=.2) +
geom_point(aes(color=residuals)) +
scale_color_gradient2(low="blue", mid="white", high="red") +
guides(color=FALSE) +
geom_point(aes(y=predicted), shape=1) +
theme_bw()
d.sub %>% gather(key = "iv", value = "x", -happy, -proud, -outraged, -angry, -afraid) %>%
ggplot(aes(x=x, y=rec.vote20jb)) +
geom_segment(aes(xend=x, yend=predictedlm1), alpha=.2) +
geom_point(aes(color=residualslm1)) +
scale_color_gradient2(low="blue", mid="white", high="red") +
guides(color=FALSE) +
geom_point(aes(y=predicted), shape=1) +
theme_bw()
d.sub$predictedlm1 <- predict(lm1)
d.sub$residualslm1 <- residuals(lm1)
d.sub %>% gather(key = "iv", value = "x", -happy, -proud, -outraged, -angry, -afraid) %>%
ggplot(aes(x=x, y=rec.vote20jb)) +
geom_segment(aes(xend=x, yend=predictedlm1), alpha=.2) +
geom_point(aes(color=residualslm1)) +
scale_color_gradient2(low="blue", mid="white", high="red") +
guides(color=FALSE) +
geom_point(aes(y=predicted), shape=1) +
theme_bw()
d.sub %>% gather(key = "iv", value = "x", -rec.vote20jb, -predictedlm1, -residualslm1) %>%
ggplot(aes(x=x, y=rec.vote20jb)) +
geom_segment(aes(xend=x, yend=predictedlm1), alpha=.2) +
geom_point(aes(color=residualslm1)) +
scale_color_gradient2(low="blue", mid="white", high="red") +
guides(color=FALSE) +
geom_point(aes(y=predicted), shape=1) +
theme_bw()
d.sub %>% gather(key = "iv", value = "x", -rec.vote20jb, -predictedlm1, -residualslm1) %>%
ggplot(aes(x=x, y=rec.vote20jb)) +
geom_segment(aes(xend=x, yend=predictedlm1), alpha=.2) +
geom_point(aes(color=residualslm1)) +
scale_color_gradient2(low="blue", mid="white", high="red") +
guides(color=FALSE) +
geom_point(aes(y=predictedlm1), shape=1) +
theme_bw()
hist(d.sub$residualslm1)
d.sub %>% ggplot(., aes(x=residualslm1)) + geom_histogram(binwidth=1, color='blue',fill='white')
d.sub %>% ggplot(., aes(x=residualslm1)) + geom_histogram(binwidth=.1, color='blue',fill='white')
d.sub %>% ggplot(., aes(x=residualslm1)) + geom_histogram(binwidth=.1, color='blue',fill='white') + xlab("Residuals")
d.sub %>% ggplot(., aes(x=residualslm1)) + geom_histogram(binwidth=.1, color='white',fill='black') + xlab("Residuals")
d.sub %>% ggplot(., aes(x=outraged)) + geom_histogram(binwidth=1, color='white',fill='black')
d.sub %>% ggplot(., aes(x=happy)) + geom_histogram(binwidth=1, color='white',fill='black')
logit1 <- glm(rec.vote20jb ~ happy + hopeful + proud + afraid + angry + worried + irritated + nervous + outraged, data = d.sub, family=binomial)
summary(logit1)
install.packages("stargazer")
library(stargazer)
stargazer(describe(d.vars), type="text",title-"Descriptive Statistics")
desc <- describe(d.vars)
stargazer(desc, type="text",title-"Descriptive Statistics")
desc
library(stargazer)
stargazer(table(d$vote20jb),type="text",title="Response Counts")
table(d$vote20jb)
stargazer(tb,type="text",title="Response Counts")
tb <- table(d$vote20jb)
stargazer(tb,type="text",title="Response Counts")
stargazer(lmsum)
lmsum <- summary(lm1)
stargazer(lmsum)
stargazer(lm1)
stargazer(lm1, type="text", title="Linear Probability Model Output")
stargazer(logit1, type="text", title="Linear Probability Model Output")
d.sub <- d %>% filter(vote20jb < 5 & ftobama1 < 101 & hopeful < 9 & worried < 9 & irritated < 9)
d.sub <- d.sub %>% select(happy, hopeful, proud, afraid, angry, worried, irritated, nervous, outraged, ftobama1, covid1, abort2, vote20jb, race7, sex, follow)
d.sub$rec.vote20jb <- ifelse((d.sub$vote20jb==1), 0, 1)
d.sub$sex <- ifelse((d.sub$sex==1), 0, 1)
d.sub$abort2 <- 8-dsub$abort2
d.sub <- d %>% filter(vote20jb < 5 & ftobama1 < 101 & hopeful < 9 & worried < 9 & irritated < 9)
d.sub <- d.sub %>% select(happy, hopeful, proud, afraid, angry, worried, irritated, nervous, outraged, ftobama1, covid1, abort2, vote20jb, race7, sex, follow)
d.sub$rec.vote20jb <- ifelse((d.sub$vote20jb==1), 0, 1)
d.sub$sex <- ifelse((d.sub$sex==1), 0, 1)
d.sub$abort2 <- 8-d.sub$abort2
d.vars <- d.sub %>% select(happy, hopeful, proud, afraid, angry, worried, irritated, nervous, outraged)
table(d.sub$abort2)
table(d$abort2)
table(d.sub$abort2)
d.sub <- d %>% filter(vote20jb < 5 & ftobama1 < 101 & hopeful < 9 & worried < 9 & irritated < 9)
d.sub <- d.sub %>% select(happy, hopeful, proud, afraid, angry, worried, irritated, nervous, outraged, ftobama1, covid1, abort2, vote20jb, race7, sex, follow)
d.sub$rec.vote20jb <- ifelse((d.sub$vote20jb==1), 0, 1)
d.sub$sex <- ifelse((d.sub$sex==1), 0, 1)
d.sub$abort2 <- 8-d.sub$abort2
d.vars <- d.sub %>% select(happy, hopeful, proud, afraid, angry, worried, irritated, nervous, outraged)
logit2 <- glm(rec.vote20jb ~ happy + hopeful + proud + afraid + angry + worried + irritated + nervous + outraged + ftobama1 + covid1 + abort2 + sex + as.factor(race7), data = d.sub, family=binomial)
stargazer(logit2, type="text", title="Simple Logit Model")
d.sub <- d %>% filter(vote20jb < 5 & ftobama1 < 101 & hopeful < 9 & worried < 9 & irritated < 9)
d.sub <- d.sub %>% select(happy, hopeful, proud, afraid, angry, worried, irritated, nervous, outraged, ftobama1, covid1, abort2, vote20jb, race7, sex, follow)
d.sub$rec.vote20jb <- ifelse((d.sub$vote20jb==1), 0, 1)
d.sub$sex <- ifelse((d.sub$sex==1), 0, 1)
d.vars <- d.sub %>% select(happy, hopeful, proud, afraid, angry, worried, irritated, nervous, outraged)
logit2 <- glm(rec.vote20jb ~ happy + hopeful + proud + afraid + angry + worried + irritated + nervous + outraged + ftobama1 + covid1 + abort2 + sex + as.factor(race7), data = d.sub, family=binomial)
stargazer(logit2, type="text", title="Simple Logit Model")
d.sub$covid1 <- 6-d.sub$covid1
logit2 <- glm(rec.vote20jb ~ happy + hopeful + proud + afraid + angry + worried + irritated + nervous + outraged + ftobama1 + covid1 + abort2 + sex + as.factor(race7), data = d.sub, family=binomial)
stargazer(logit2, type="text", title="Logit Model with Additional Controls")
d.sub <- d.sub %>% mutate(obamasc = ftobama1/10)
logit2 <- glm(rec.vote20jb ~ happy + hopeful + proud + afraid + angry + worried + irritated + nervous + outraged + obamasc + covid1::follow + abort2 + sex, data = d.sub, family=binomial)
d.sub <- d.sub %>% mutate(obamasc = ftobama1/10)
logit2 <- glm(rec.vote20jb ~ happy + hopeful + proud + afraid + angry + worried + irritated + nervous + outraged + obamasc + covid1*follow + abort2 + sex, data = d.sub, family=binomial)
summary(logit2)
