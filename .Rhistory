group_by(constructorId, name.x) %>%
summarize(totalwins = sum(wins)) %>%
arrange(desc(totalwins)) %>%
filter(totalwins != 0)
win_19_plot <- ggplot(winnings_19, aes(x = name.x, y = totalwins, fill = name.x,
hovertemplate = paste('<b>Driver</b>: %{y}<br>',
'<b>Team</b>: %{text}<br>',
'Number of Fastest Laps</b>: %{x}<br>'))) +
geom_bar(position = "dodge", stat = "identity") +  theme(axis.text.x = element_text(angle = 45)) +
scale_fill_manual(values = c("Ferrari" = "#ED1C24",
"Mercedes" = "#6CD3BF",
"Red Bull" = "#1E5BC6")) +
labs (x = "Constructors", y = "Number of Wins", fill = "Constructor Names",
title = "2019 Wins by Constructor")
ggplotly(win_19_plot) %>%
ggplotly(win_19_plot)
winnings_19 <- season_19 %>%
group_by(constructorId, name.x) %>%
summarize(totalwins = sum(wins)) %>%
arrange(desc(totalwins)) %>%
filter(totalwins != 0)
win_19_plot <- ggplot(winnings_19, aes(x = name.x, y = totalwins, fill = name.x,
text = paste('<b>Constructor</b>: name.x<br>',
'<b>Wins</b>: totalwins <br>'))) +
geom_bar(position = "dodge", stat = "identity") +  theme(axis.text.x = element_text(angle = 45)) +
scale_fill_manual(values = c("Ferrari" = "#ED1C24",
"Mercedes" = "#6CD3BF",
"Red Bull" = "#1E5BC6")) +
labs (x = "Constructors", y = "Number of Wins", fill = "Constructor Names",
title = "2019 Wins by Constructor")
ggplotly(win_19_plot)
winnings_19 <- season_19 %>%
group_by(constructorId, name.x) %>%
summarize(totalwins = sum(wins)) %>%
arrange(desc(totalwins)) %>%
filter(totalwins != 0)
win_19_plot <- ggplot(winnings_19, aes(x = name.x, y = totalwins, fill = name.x,
text = paste('<b>Constructor</b>: "name.x" <br>',
'<b>Wins</b>: "totalwins" <br>'))) +
geom_bar(position = "dodge", stat = "identity") +  theme(axis.text.x = element_text(angle = 45)) +
scale_fill_manual(values = c("Ferrari" = "#ED1C24",
"Mercedes" = "#6CD3BF",
"Red Bull" = "#1E5BC6")) +
labs (x = "Constructors", y = "Number of Wins", fill = "Constructor Names",
title = "2019 Wins by Constructor")
ggplotly(win_19_plot)
winnings_19 <- season_19 %>%
group_by(constructorId, name.x) %>%
summarize(totalwins = sum(wins)) %>%
arrange(desc(totalwins)) %>%
filter(totalwins != 0)
win_19_plot <- ggplot(winnings_19, aes(x = name.x, y = totalwins, fill = name.x,
text = paste("<b>Constructor</b>:", winnings_19$name.x, "<br>",
"<b>Number of Wins</b>:", winnings_19$totalwins, "<br>"))) +
geom_bar(position = "dodge", stat = "identity") +  theme(axis.text.x = element_text(angle = 45)) +
scale_fill_manual(values = c("Ferrari" = "#ED1C24",
"Mercedes" = "#6CD3BF",
"Red Bull" = "#1E5BC6")) +
labs (x = "Constructors", y = "Number of Wins", fill = "Constructor Names",
title = "2019 Wins by Constructor")
ggplotly(win_19_plot)
winnings_19 <- season_19 %>%
group_by(constructorId, name.x) %>%
summarize(totalwins = sum(wins)) %>%
arrange(desc(totalwins)) %>%
filter(totalwins != 0)
win_19_plot <- ggplot(winnings_19, aes(x = name.x, y = totalwins, fill = name.x,
text = paste("<b>Constructor</b>:", winnings_19$name.x, "<br>",
"<b>Number of Wins</b>:", winnings_19$totalwins, "<br>"))) +
geom_bar(position = "dodge", stat = "identity") +  theme(axis.text.x = element_text(angle = 45)) +
scale_fill_manual(values = c("Ferrari" = "#ED1C24",
"Mercedes" = "#6CD3BF",
"Red Bull" = "#1E5BC6")) +
labs (x = "Constructors", y = "Number of Wins", fill = "Constructor Names",
title = "2019 Wins by Constructor")
ggplotly(win_19_plot, tooltip = "text")
winnings_21 <- season_21 %>%
group_by(constructorId, name.x) %>%
summarize(totalwins = sum(wins)) %>%
arrange(desc(totalwins)) %>%
filter(totalwins != 0)
win_21_plot <- ggplot(winnings_21, aes(x = name.x, y = totalwins, fill = name.x,
text = paste("<b>Constructor</b>:", winnings_21$name.x, "<br>",
"<b>Number of Wins</b>:", winnings_21$totalwins, "<br>"))) +
geom_bar(position = "dodge", stat = "identity") +  theme(axis.text.x = element_text(angle = 45)) +
scale_fill_manual(values = c("Apline F1 Team" = "#2293D1",
"McLaren" = "#F58020",
"Mercedes" = "#6CD3BF",
"Red Bull" = "#1E5BC6")) +
labs (x = "Constructors", y = "Number of Wins", fill = "Constructor Names",
title = "2021 Wins by Constructor")
ggplotly(win_21_plot, tooltip = "text")
points_19_plot <- ggplot(points_19, aes(x = name.x, y = totalpoints, fill = name.x)) +
geom_bar(position = "dodge", stat = "identity") +  theme(axis.text.x = element_text(angle = 45)) +
scale_fill_manual(values = c("Alfa Romeo" = "#B12039",
"Ferrari" = "#ED1C24",
"Haas F1 Team" = "#B6BABD",
"McLaren" = "#F58020",
"Mercedes" = "#6CD3BF",
"Racing Point" = "#F596C8",
"Red Bull" = "#1E5BC6",
"Renault" = "#FFF500",
"Toro Rosso" = "#469BFF",
"Williams" = "#37BEDD")) +
labs (x = "Constructors", y = "Total Points", fill = "Constructor Names",
title = "Total Points Earned by Constructors in 2019")
points_19 <- season_19 %>%
group_by(constructorId, name.x) %>%
summarize(totalpoints = sum(points)) %>%
arrange(desc(totalpoints))
avg_points_19 <- season_19 %>%
group_by(constructorId, name.x) %>%
summarize(avg_points = mean(points)) %>%
arrange(desc(avg_points))
points_19_plot <- ggplot(points_19, aes(x = name.x, y = totalpoints, fill = name.x,
text = paste("<b>Constructor</b>:", points_19$name.x, "<br>",
"<b>Total Amount of Points</b>:", points_19$totalpoints, "<br>"))) +
geom_bar(position = "dodge", stat = "identity") +  theme(axis.text.x = element_text(angle = 45)) +
scale_fill_manual(values = c("Alfa Romeo" = "#B12039",
"Ferrari" = "#ED1C24",
"Haas F1 Team" = "#B6BABD",
"McLaren" = "#F58020",
"Mercedes" = "#6CD3BF",
"Racing Point" = "#F596C8",
"Red Bull" = "#1E5BC6",
"Renault" = "#FFF500",
"Toro Rosso" = "#469BFF",
"Williams" = "#37BEDD")) +
labs (x = "Constructors", y = "Total Points", fill = "Constructor Names",
title = "Total Points Earned by Constructors in 2019")
ggplotly(points_19_plot, tooltip = "text")
avg_points_19_plot <- ggplot(avg_points_19, aes(x = name.x, y = avg_points, fill = name.x,
text = paste("<b>Constructor</b>:", avg_points_19$name.x, "<br>",
"<b>Average Amount of Points</b>:", avg_points_19$avg_lpoints, "<br>"))) +
geom_bar(position = "dodge", stat = "identity") +  theme(axis.text.x = element_text(angle = 45)) +
scale_fill_manual(values = c("Alfa Romeo" = "#B12039",
"Ferrari" = "#ED1C24",
"Haas F1 Team" = "#B6BABD",
"McLaren" = "#F58020",
"Mercedes" = "#6CD3BF",
"Racing Point" = "#F596C8",
"Red Bull" = "#1E5BC6",
"Renault" = "#FFF500",
"Toro Rosso" = "#469BFF",
"Williams" = "#37BEDD")) +
labs (x = "Constructors", y = "Average Points", fill = "Constructor Names",
title = "Average Points Earned by Constructors in 2019")
ggplotly(avg_points_19_plo, tooltip = "text'")
avg_points_19_plot <- ggplot(avg_points_19, aes(x = name.x, y = avg_points, fill = name.x,
text = paste("<b>Constructor</b>:", avg_points_19$name.x, "<br>",
"<b>Average Amount of Points</b>:", avg_points_19$avg_lpoints, "<br>"))) +
geom_bar(position = "dodge", stat = "identity") +  theme(axis.text.x = element_text(angle = 45)) +
scale_fill_manual(values = c("Alfa Romeo" = "#B12039",
"Ferrari" = "#ED1C24",
"Haas F1 Team" = "#B6BABD",
"McLaren" = "#F58020",
"Mercedes" = "#6CD3BF",
"Racing Point" = "#F596C8",
"Red Bull" = "#1E5BC6",
"Renault" = "#FFF500",
"Toro Rosso" = "#469BFF",
"Williams" = "#37BEDD")) +
labs (x = "Constructors", y = "Average Points", fill = "Constructor Names",
title = "Average Points Earned by Constructors in 2019")
ggplotly(avg_points_19_plot, tooltip = "text'")
avg_points_19_plot <- ggplot(avg_points_19, aes(x = name.x, y = avg_points, fill = name.x,
text = paste("<b>Constructor</b>:", avg_points_19$name.x, "<br>",
"<b>Average Amount of Points</b>:", avg_points_19$avg_lpoints, "<br>"))) +
geom_bar(position = "dodge", stat = "identity") +  theme(axis.text.x = element_text(angle = 45)) +
scale_fill_manual(values = c("Alfa Romeo" = "#B12039",
"Ferrari" = "#ED1C24",
"Haas F1 Team" = "#B6BABD",
"McLaren" = "#F58020",
"Mercedes" = "#6CD3BF",
"Racing Point" = "#F596C8",
"Red Bull" = "#1E5BC6",
"Renault" = "#FFF500",
"Toro Rosso" = "#469BFF",
"Williams" = "#37BEDD")) +
labs (x = "Constructors", y = "Average Points", fill = "Constructor Names",
title = "Average Points Earned by Constructors in 2019")
ggplotly(avg_points_19_plot, tooltip = "text'")
avg_points_19_plot <- ggplot(avg_points_19, aes(x = name.x, y = avg_points, fill = name.x,
text = paste("<b>Constructor</b>:", avg_points_19$name.x, "<br>",
"<b>Average Amount of Points</b>:", avg_points_19$avg_points, "<br>"))) +
geom_bar(position = "dodge", stat = "identity") +  theme(axis.text.x = element_text(angle = 45)) +
scale_fill_manual(values = c("Alfa Romeo" = "#B12039",
"Ferrari" = "#ED1C24",
"Haas F1 Team" = "#B6BABD",
"McLaren" = "#F58020",
"Mercedes" = "#6CD3BF",
"Racing Point" = "#F596C8",
"Red Bull" = "#1E5BC6",
"Renault" = "#FFF500",
"Toro Rosso" = "#469BFF",
"Williams" = "#37BEDD")) +
labs (x = "Constructors", y = "Average Points", fill = "Constructor Names",
title = "Average Points Earned by Constructors in 2019")
ggplotly(avg_points_19_plot, tooltip = "text'")
avg_points_19_plot <- ggplot(avg_points_19, aes(x = name.x, y = avg_points, fill = name.x,
text = paste("<b>Constructor</b>:", avg_points_19$name.x, "<br>",
"<b>Average Amount of Points</b>:", avg_points_19$avg_points, "<br>"))) +
geom_bar(position = "dodge", stat = "identity") +  theme(axis.text.x = element_text(angle = 45)) +
scale_fill_manual(values = c("Alfa Romeo" = "#B12039",
"Ferrari" = "#ED1C24",
"Haas F1 Team" = "#B6BABD",
"McLaren" = "#F58020",
"Mercedes" = "#6CD3BF",
"Racing Point" = "#F596C8",
"Red Bull" = "#1E5BC6",
"Renault" = "#FFF500",
"Toro Rosso" = "#469BFF",
"Williams" = "#37BEDD")) +
labs (x = "Constructors", y = "Average Points", fill = "Constructor Names",
title = "Average Points Earned by Constructors in 2019")
ggplotly(avg_points_19_plot, tooltip = "text")
points_21 <- season_21 %>%
group_by(constructorId, name.x) %>%
summarize(totalpoints = sum(points)) %>%
arrange(desc(totalpoints)) %>%
filter(totalpoints != 0)
avg_points_21 <- season_21 %>%
group_by(constructorId, name.x) %>%
summarize(avg_points = mean(points)) %>%
arrange(desc(avg_points)) %>%
filter(avg_points != 0)
points_21_plot <- ggplot(points_21, aes(x = name.x, y = totalpoints, fill = name.x,
text = paste("<b>Constructor</b>:", points_21$name.x, "<br>",
"<b>Total Amount of Points</b>:", points_21$totalpoints, "<br>"))) +
geom_bar(position = "dodge", stat = "identity") +  theme(axis.text.x = element_text(angle = 45)) +
scale_fill_manual(values = c("Alfa Romeo" = "#B12039",
"AlphaTauri" = "#4E7C9B",
"Alpine F1 Team" = "#2293D1",
"Aston Martin" = "#2D826D",
"Ferrari" = "#ED1C24",
"McLaren" = "#F58020",
"Mercedes" = "#6CD3BF",
"Red Bull" = "#1E5BC6",
"Williams" = "#37BEDD")) +
labs (x = "Constructors", y = "Total Points", fill = "Constructor Names",
title = "Total Points Earned by Constructors in 2021")
ggplotly(points_21_plot, tooltip = "text")
avg_points_21_plot <- ggplot(avg_points_21, aes(x = name.x, y = avg_points, fill = name.x,
text = paste("<b>Constructor</b>:", avg_points_21$name.x, "<br>",
"<b>Average Amount of Points</b>:", avg_points_21$avg_points, "<br>"))) +
geom_bar(position = "dodge", stat = "identity") +  theme(axis.text.x = element_text(angle = 45)) +
scale_fill_manual(values = c("Alfa Romeo" = "#B12039",
"AlphaTauri" = "#4E7C9B",
"Alpine F1 Team" = "#2293D1",
"Aston Martin" = "#2D826D",
"Ferrari" = "#ED1C24",
"McLaren" = "#F58020",
"Mercedes" = "#6CD3BF",
"Red Bull" = "#1E5BC6",
"Williams" = "#37BEDD")) +
labs (x = "Constructors", y = "Average Points", fill = "Constructor Names",
title = "Average Points Earned by Constructors in 2021")
ggplotly(avg_points_21_plot, tooltip = "text")
df2 <- left_join(results, status, by = "statusId")
df2 <- left_join(df2, constructors, by = "constructorId")
df2 <- left_join(df2, races, by = "raceId")
## subset
df2 <- subset(df2, select = c(resultId, raceId, driverId, constructorId,
position, points, statusId, status, constructorRef, name.x,
year, circuitId, name.y))
status_19 <- df2 %>%
filter(year == 2019) %>%
group_by(name.x, status) %>%
summarize(status_count = n())
status_count_19 <- df2 %>%
filter(year == 2019) %>%
group_by(name.x, status) %>%
summarize(status_count = n()) %>%
pivot_wider(
names_from = status,
values_from = status_count
)
status_count_19
## plot constructor status for 2019
status_19_plot <- ggplot(status_19, aes(x = name.x, y = status_count, fill = status,
text = paste("<b>Constructor</b>:", status_19$name.x, "<br>",
"<b>Status Count</b>:", status_19$status_count, "<br>",
"<b>Status</b>:", status_19$status, "<br>"))) +
geom_col() +
coord_flip() +
scale_fill_manual(values = c("Accident" = "#000000",
"Car Failure" = "#47ABFF",
"Collision" = "#FF0000",
"Disqualified" = "#505050",
"DNF" = "#ADADAD",
"Finished" = "#1BBC00")) +
labs(x = "Constructor", y = "Status Count",
title ="2019 Constructor Status")
ggplotly(status_19_plot, tooltip = "text")
ferrari_status_2019 <- df2 %>%
filter(name.x == "Ferrari", year == 2019) %>%
na.omit() %>%
group_by(name.x, status) %>%
summarize(status_count = n())
## compute position of labels
ferrari_status_2019 <- ferrari_status_2019 %>%
arrange(desc(status_count)) %>%
mutate(prop = status_count / sum(ferrari_status_2019$status_count) *100) %>%
mutate(ypos = cumsum(prop)- 0.5*prop )
## red bull
rb_status_2019 <- df2 %>%
filter(name.x == "Red Bull", year == 2019) %>%
na.omit() %>%
group_by(name.x, status) %>%
summarize(status_count = n())
## compute position of labels
rb_status_2019 <- rb_status_2019 %>%
arrange(desc(status_count)) %>%
mutate(prop = status_count / sum(rb_status_2019$status_count) *100) %>%
mutate(ypos = cumsum(prop)- 0.5*prop )
## mercedes
merc_status_2019 <- df2 %>%
filter(name.x == "Mercedes", year == 2019) %>%
na.omit() %>%
group_by(name.x, status) %>%
summarize(status_count = n())
## compute position of labels
merc_status_2019 <- merc_status_2019 %>%
arrange(desc(status_count)) %>%
mutate(prop = status_count / sum(merc_status_2019$status_count) *100) %>%
mutate(ypos = cumsum(prop)- 0.5*prop )
## mcclaren
mcl_status_2019 <- df2 %>%
filter(name.x == "McLaren", year == 2019) %>%
na.omit() %>%
group_by(name.x, status) %>%
summarize(status_count = n())
## compute position of labels
mcl_status_2019 <- mcl_status_2019 %>%
arrange(desc(status_count)) %>%
mutate(prop = status_count / sum(mcl_status_2019$status_count) *100) %>%
mutate(ypos = cumsum(prop)- 0.5*prop )
pie19 <- plot_ly(labels = ~status, values = ~prop,
textposition = 'inside',textinfo = 'label+percent') %>%
add_pie(data = ferrari_status_2019, name = "Ferrari", marker = list(colors = c("#1BBC00", "#FF0000",
"#ADADAD", "#47ABFF",
"#000000", "#505050")),
domain = list(row = 0, column = 0)) %>%
add_pie(data = rb_status_2019, name = "Red Bull",marker = list(colors = c("#1BBC00", "#ADADAD",
"#47ABFF", "#000000",
"#FF0000")),
domain = list(row = 0, column = 1))%>%
add_pie(data = merc_status_2019, name = "Mercedes", marker = list(colors = c("#1BBC00", "#000000",
"#47ABFF",
"#ADADAD")),
domain = list(row = 1, column = 0))%>%
add_pie(data = mcl_status_2019, name = "McLaren", marker = list(colors = c("#1BBC00", "#ADADAD",
"#47ABFF", "#FF0000",
"#505050")),
domain = list(row = 1, column = 1))%>%
layout(title = '2019 Constructor Statuses', showlegend = T, grid=list(rows=2, columns=2),
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
annotations = list(x = c(.004, .55, .0002, .55),
y = c(.78, .78, .22, .22),
text = c("Ferrari","Red Bull","Mercedes","McLaren"),
xref = "papper",
yref = "papper",
showarrow = F
)
)
pie19
status_2021 <- df2 %>%
filter(year == 2021) %>%
group_by(name.x, status) %>%
summarize(status_count = n())
status_count_2021 <- df2 %>%
filter(year == 2021) %>%
group_by(name.x, status) %>%
summarize(status_count = n()) %>%
pivot_wider(
names_from = status,
values_from = status_count
)
status_count_2021
## plot constructor status for 2021
status_2021_plot <- ggplot(status_2021, aes(x = name.x, y = status_count, fill = status,
text = paste("<b>Constructor</b>:", status_21$name.x, "<br>",
"<b>Status Count</b>:", status_21$status_count, "<br>",
"<b>Status</b>:", status_21$status, "<br>"))) +
geom_col() +
coord_flip() +
scale_fill_manual(values = c("Accident" = "#000000",
"Car Failure" = "#47ABFF",
"Collision" = "#FF0000",
"Disqualified" = "#505050",
"DNF" = "#ADADAD",
"Finished" = "#1BBC00")) +
labs(x = "Constructor", y = "Status Count",
title="2021 Constructor Status")
ggplotly(status_2021_plot, tooltip = "text")
status_21 <- df2 %>%
filter(year == 2021) %>%
group_by(name.x, status) %>%
summarize(status_count = n())
status_count_21 <- df2 %>%
filter(year == 2021) %>%
group_by(name.x, status) %>%
summarize(status_count = n()) %>%
pivot_wider(
names_from = status,
values_from = status_count
)
status_count_21
## plot constructor status for 2021
status_2021_plot <- ggplot(status_2021, aes(x = name.x, y = status_count, fill = status,
text = paste("<b>Constructor</b>:", status_21$name.x, "<br>",
"<b>Status Count</b>:", status_21$status_count, "<br>",
"<b>Status</b>:", status_21$status, "<br>"))) +
geom_col() +
coord_flip() +
scale_fill_manual(values = c("Accident" = "#000000",
"Car Failure" = "#47ABFF",
"Collision" = "#FF0000",
"Disqualified" = "#505050",
"DNF" = "#ADADAD",
"Finished" = "#1BBC00")) +
labs(x = "Constructor", y = "Status Count",
title="2021 Constructor Status")
ggplotly(status_2021_plot, tooltip = "text")
## plot constructor status for 2021
status_21_plot <- ggplot(status_2021, aes(x = name.x, y = status_count, fill = status,
text = paste("<b>Constructor</b>:", status_21$name.x, "<br>",
"<b>Status Count</b>:", status_21$status_count, "<br>",
"<b>Status</b>:", status_21$status, "<br>"))) +
geom_col() +
coord_flip() +
scale_fill_manual(values = c("Accident" = "#000000",
"Car Failure" = "#47ABFF",
"Collision" = "#FF0000",
"Disqualified" = "#505050",
"DNF" = "#ADADAD",
"Finished" = "#1BBC00")) +
labs(x = "Constructor", y = "Status Count",
title="2021 Constructor Status")
ggplotly(status_21_plot, tooltip = "text")
## ferrari
ferrari_status_2021 <- df2 %>%
filter(name.x == "Ferrari", year == 2021) %>%
na.omit() %>%
group_by(name.x, status) %>%
summarize(status_count = n())
## compute position of labels
ferrari_status_2021 <- ferrari_status_2021 %>%
arrange(desc(status_count)) %>%
mutate(prop = status_count / sum(ferrari_status_2021$status_count) *100) %>%
mutate(ypos = cumsum(prop)- 0.5*prop )
## red bull
rb_status_2021 <- df2 %>%
filter(name.x == "Red Bull", year == 2021) %>%
na.omit() %>%
group_by(name.x, status) %>%
summarize(status_count = n())
## compute position of labels
rb_status_2021 <- rb_status_2021 %>%
arrange(desc(status_count)) %>%
mutate(prop = status_count / sum(rb_status_2021$status_count) *100) %>%
mutate(ypos = cumsum(prop)- 0.5*prop )
## mercedes
merc_status_2021 <- df2 %>%
filter(name.x == "Mercedes", year == 2021) %>%
na.omit() %>%
group_by(name.x, status) %>%
summarize(status_count = n())
## compute position of labels
merc_status_2021 <- merc_status_2021 %>%
arrange(desc(status_count)) %>%
mutate(prop = status_count / sum(merc_status_2021$status_count) *100) %>%
mutate(ypos = cumsum(prop)- 0.5*prop )
## mcclaren
mcl_status_2021 <- df2 %>%
filter(name.x == "McLaren", year == 2021) %>%
na.omit() %>%
group_by(name.x, status) %>%
summarize(status_count = n())
## compute position of labels
mcl_status_2021 <- mcl_status_2021 %>%
arrange(desc(status_count)) %>%
mutate(prop = status_count / sum(mcl_status_2021$status_count) *100) %>%
mutate(ypos = cumsum(prop)- 0.5*prop )
pie21 <- plot_ly(labels = ~status, values = ~prop,
textposition = 'inside',textinfo = 'label+percent') %>%
add_pie(data = ferrari_status_2021, name = "Ferrari", marker = list(colors = c("#1BBC00", "#ADADAD",
"#47ABFF", "#FF0000")),
domain = list(row = 0, column = 0)) %>%
add_pie(data = rb_status_2021, name = "Red Bull", marker = list(colors = c("#1BBC00", "#FF0000",
"#ADADAD", "#000000",
"#47ABFF")),
domain = list(row = 0, column = 1))%>%
add_pie(data = merc_status_2021, name = "Mercedes", marker = list(colors = c("#1BBC00", "#FF0000",
"#47ABFF", "#ADADAD")),
domain = list(row = 1, column = 0))%>%
add_pie(data = mcl_status_2021, name = "McLaren", marker = list(colors = c("#1BBC00", "#ADADAD",
"#47ABFF","#FF0000")),
domain = list(row = 1, column = 1)) %>%
layout(title = '2021 Constructor Statuses', showlegend = T, grid=list(rows=2, columns=2),
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
annotations = list(x = c(.004, .55, .0002, .55),
y = c(.78, .78, .22, .22),
text = c("Ferrari","Red Bull","Mercedes","McLaren"),
xref = "papper",
yref = "papper",
showarrow = F
)
)
pie21
