points_19 <- season_19 %>%
group_by(constructorId, name.x) %>%
summarize(totalpoints = sum(points)) %>%
arrange(desc(totalpoints)) %>%
rename('name'=name.x)
## 2021 total points
points_21 <- season_21 %>%
group_by(constructorId, name.x) %>%
summarize(totalpoints = sum(points)) %>%
arrange(desc(totalpoints)) %>%
filter(totalpoints != 0)
points_19_plot <- ggplot(points_19, aes(x = name, y = totalpoints, fill = name)) +
geom_bar(position = "dodge", stat = "identity") +  theme(axis.text.x = element_text(angle = 45)) +
scale_fill_manual(values = c("Alfa Romeo" = "#B12039",
"Ferrari" = "#ED1C24",
"Haas F1 Team" = "#B6BABD",
"McLaren" = "#F58020",
"Mercedes" = "#6CD3BF",
"Racing Point" = "#F596C8",
"Red Bull" = "#1E5BC6",
"Renault" = "#FFF500",
"Toro Rosso" = "#469BFF",
"Williams" = "#37BEDD")) +
labs (x = "Constructors", y = "Total Points", fill = "Constructor Names",
title = "Total Points Earned by Constructors in 2019")
ggplotly(points_19_plot)
points_21_plot <- ggplot(points_21, aes(x = name.x, y = totalpoints, fill = name.x)) +
geom_bar(position = "dodge", stat = "identity") +  theme(axis.text.x = element_text(angle = 45)) +
scale_fill_manual(values = c("Alfa Romeo" = "#B12039",
"AlphaTauri" = "#4E7C9B",
"Alpine F1 Team" = "#2293D1",
"Aston Martin" = "#2D826D",
"Ferrari" = "#ED1C24",
"McLaren" = "#F58020",
"Mercedes" = "#6CD3BF",
"Red Bull" = "#1E5BC6",
"Williams" = "#37BEDD")) +
labs (x = "Constructors", y = "Total Points", fill = "Constructor Names",
title = "Total Points Earned by Constructors in 2021")
ggplotly(points_21_plot)
df2 <- left_join(results, status2, by = "statusId")
df2 <- left_join(df2, constructors, by = "constructorId")
df2 <- left_join(df2, races, by = "raceId")
## subset
df2 <- subset(df2, select = c(resultId, raceId, driverId, constructorId,
position, points, statusId, status, constructorRef, name.x,
year, circuitId, name.y))
## 2019 status
status_19 <- df2 %>%
filter(year == 2019) %>%
group_by(name.x, status) %>%
summarize(status_count = n())
## 2021 status
status_2021 <- df2 %>%
filter(year == 2021) %>%
group_by(name.x, status) %>%
summarize(status_count = n())
status_19_plot <- ggplot(status_19, aes(x = name.x, y = status_count, fill = status)) +
geom_col() +
coord_flip() +
scale_fill_manual(values = c("Accident" = "#000000",
"Car Failure" = "#47ABFF",
"Collision" = "#FF0000",
"Disqualified" = "#505050",
"DNF" = "#ADADAD",
"Finished" = "#1BBC00")) +
labs(x = "CConstructor", y = "Status Count",
title ="2019 Constructor Status")
ggplotly(status_19_plot)
status_2021_plot <- ggplot(status_2021, aes(x = name.x, y = status_count, fill = status)) +
geom_col() +
coord_flip() +
scale_fill_manual(values = c("Accident" = "#000000",
"Car Failure" = "#47ABFF",
"Collision" = "#FF0000",
"Disqualified" = "#505050",
"DNF" = "#ADADAD",
"Finished" = "#1BBC00")) +
labs(x = "CConstructor", y = "Status Count",
title="2021 Constructor Status")
ggplotly(status_2021_plot)
ggplot(races2019, aes(x=date,y=points,group=full_name,color=full_name, linetype=full_name)) + geom_point() + geom_smooth(se=FALSE) + coord_flip() + ggtitle("2019") + scale_linetype_manual(values=xover_2019$line_type, name="full_name") + scale_color_manual(values=xover_2019$colorcol, name="full_name") + theme_classic() + theme(legend.text=element_text(size=6.5)) + labs (x = "Date", y = "Total Points") + guides(color=guide_legend(ncol=2))
ggplot(races2019, aes(x=date,y=points,group=full_name,color=full_name, linetype=full_name)) + geom_point() + geom_smooth(se=FALSE) + coord_flip() + ggtitle("2019") + scale_linetype_manual(values=xover_2019$line_type, name="full_name") + scale_color_manual(values=xover_2019$colorcol, name="full_name") + theme_classic() + theme(legend.text=element_text(size=6.5)) + labs (x = "Date", y = "Total Points") + guides(fill=guide_legend(ncol=2))
ggplot(races2019, aes(x=date,y=points,group=full_name,color=full_name, linetype=full_name)) + geom_point() + geom_smooth(se=FALSE) + coord_flip() + ggtitle("2019") + scale_linetype_manual(values=xover_2019$line_type, name="full_name") + scale_color_manual(values=xover_2019$colorcol, name="full_name") + theme_classic() + theme(legend.text=element_text(size=6.5)) + labs (x = "Date", y = "Total Points") + guides(color=guide_legend(ncol=2))
ggplot(races2019, aes(x=date,y=points,group=full_name,color=full_name, linetype=full_name)) + geom_point() + geom_smooth(se=FALSE) + coord_flip() +
ggtitle("2019") +
scale_linetype_manual(values=xover_2019$line_type, name="full_name") +
scale_color_manual(values=xover_2019$colorcol, name="full_name") + theme_classic() + theme(legend.text=element_text(size=6.5)) +
labs (x = "Date", y = "Total Points") +
guides(color=guide_legend(ncol=2, byrow=TRUE))
ggplot(races2019, aes(x=date,y=points,group=full_name,color=full_name, linetype=full_name)) + geom_point() + geom_smooth(se=FALSE) + coord_flip() +
ggtitle("2019") +
scale_linetype_manual(values=xover_2019$line_type, name="full_name") +
scale_color_manual(values=xover_2019$colorcol, name="full_name") + theme_classic() + theme(legend.text=element_text(size=6.5)) +
labs (x = "Date", y = "Total Points") +
guides(fill=guide_legend(ncol=2, byrow=TRUE))
ggplot(races2019, aes(x=date,y=points,group=full_name,color=full_name, linetype=full_name)) + geom_point() + geom_smooth(se=FALSE) + coord_flip() +
ggtitle("2019") +
scale_linetype_manual(values=xover_2019$line_type, name="full_name") +
scale_color_manual(values=xover_2019$colorcol, name="full_name") + theme_classic() + theme(legend.text=element_text(size=6.5)) +
labs (x = "Date", y = "Total Points") +
guides(fill=guide_legend(ncol=2, byrow=FALSE))
ggplot(races2021, aes(x=date,y=points,group=full_name,color=full_name, linetype=full_name)) + geom_point() + geom_smooth(se=FALSE) + coord_flip() +
ggtitle("2021") +
scale_linetype_manual(values=xover_2021$line_type, name="full_name") +
scale_color_manual(values=xover_2021$colorcol, name="full_name") +
theme_classic()
race_standings <- left_join(standings, races, by="raceId")
driver_race_standings <- left_join(race_standings, drivers, by="driverId")
races2021 <- driver_race_standings %>% filter(year==2021)
races2019 <- driver_race_standings %>% filter(year==2019)
xover_2021 <- xover_total %>% filter(year==2021) %>% arrange(full_name)
xover_2019 <- xover_total %>% filter(year==2019) %>% arrange(full_name)
xover_2019 <- xover_2019[-c(2,16),]
xover_2019 <- xover_2019 %>% filter(driverId %in% races2019$driverId)
races2021 <- left_join(races2021, xover_2021, by="driverId")
races2019 <- left_join(races2019, xover_2019, by="driverId")
ggplot(races2021) +
geom_line(aes(x=date,y=position,group=full_name,color=full_name,linetype=full_name)) + scale_color_manual(values=xover_2021$colorcol)+ scale_linetype_manual(values=xover_2021$line_type) + coord_flip() + ggtitle("2021") + theme_classic() + theme(legend.text=element_text(size=6.5)) + labs (x = "Date", y = "Position")
ggplot(races2019) +
geom_line(aes(x=date,y=position,group=full_name,color=full_name,linetype=full_name)) + scale_color_manual(values=xover_2019$colorcol)+ scale_linetype_manual(values=xover_2019$line_type) + coord_flip() + ggtitle("2019") + theme_classic() + theme(legend.text=element_text(size=6.5)) + labs (x = "Date", y = "Position") + guides(color=guide_legend(ncol=2))
ggplot(races2021, aes(x=date,y=points,group=full_name,color=full_name, linetype=full_name)) + geom_point() + geom_smooth(se=FALSE) + coord_flip() +
ggtitle("2021") +
scale_linetype_manual(values=xover_2021$line_type, name="full_name") +
scale_color_manual(values=xover_2021$colorcol, name="full_name") +
theme_classic()
ggplot(races2019, aes(x=date,y=points,group=full_name,color=full_name, linetype=full_name)) + geom_point() + geom_smooth(se=FALSE) + coord_flip() +
ggtitle("2019") +
scale_linetype_manual(values=xover_2019$line_type, name="full_name") +
scale_color_manual(values=xover_2019$colorcol, name="full_name") + theme_classic() + theme(legend.text=element_text(size=6.5)) +
labs (x = "Date", y = "Total Points") +
guides(fill=guide_legend(ncol=2, byrow=FALSE))
ggplot(races2019, aes(x=date,y=points,group=full_name,color=full_name, linetype=full_name)) + geom_point() + geom_smooth(se=FALSE) + coord_flip() +
ggtitle("2019") +
scale_linetype_manual(values=xover_2019$line_type, name="full_name") +
scale_color_manual(values=xover_2019$colorcol, name="full_name") + theme_classic() + theme(legend.text=element_text(size=6.5)) +
labs (x = "Date", y = "Total Points") +
guides(color=guide_legend(ncol=2, byrow=FALSE))
ggplot(races2019, aes(x=date,y=points,group=full_name,color=full_name, linetype=full_name)) + geom_point() + geom_smooth(se=FALSE) + coord_flip() +
ggtitle("2019") +
scale_linetype_manual(values=xover_2019$line_type, name="full_name") +
scale_color_manual(values=xover_2019$colorcol, name="full_name") + theme_classic() + theme(legend.text=element_text(size=6.5)) +
labs (x = "Date", y = "Total Points") +
guides(color=guide_legend(ncol=2, byrow=TRUE))
ggplot(races2019, aes(x=date,y=points,group=full_name,color=full_name, linetype=full_name)) + geom_point() + geom_smooth(se=FALSE) + coord_flip() +
ggtitle("2019") +
scale_linetype_manual(values=xover_2019$line_type, name="full_name") +
scale_color_manual(values=xover_2019$colorcol, name="full_name") + theme_classic() + theme(legend.text=element_text(size=6.5)) +
labs (x = "Date", y = "Total Points") +
guides(shape=guide_legend(ncol=2, byrow=TRUE))
ggplot(races2019, aes(x=date,y=points,group=full_name,color=full_name, linetype=full_name)) + geom_point() + geom_smooth(se=FALSE) + coord_flip() +
ggtitle("2019") +
scale_linetype_manual(values=xover_2019$line_type, name="full_name") +
scale_color_manual(values=xover_2019$colorcol, name="full_name") + theme_classic() + theme(legend.text=element_text(size=6.5)) +
labs (x = "Date", y = "Total Points") +
guides(linetype=guide_legend(ncol=2, byrow=TRUE))
ggplot(races2021, aes(x=date,y=points,group=full_name,color=full_name, linetype=full_name)) + geom_point() + geom_smooth(se=FALSE) + coord_flip() +
ggtitle("2021") +
scale_linetype_manual(values=xover_2021$line_type, name="full_name") +
scale_color_manual(values=xover_2021$colorcol, name="full_name") +
theme_classic()
ggplot(races2019, aes(x=date,y=points,group=full_name,color=full_name, linetype=full_name)) + geom_point() + geom_smooth(se=FALSE) + coord_flip() +
ggtitle("2019") +
scale_linetype_manual(values=xover_2019$line_type, name="full_name") +
scale_color_manual(values=xover_2019$colorcol, name="full_name") + theme_classic() + theme(legend.text=element_text(size=6.5)) +
labs (x = "Date", y = "Total Points") +
guides(linetype=guide_legend(ncol=2, byrow=TRUE))
ggplot(races2019, aes(x=date,y=points,group=full_name,color=full_name, linetype=full_name)) + geom_point() + geom_smooth(se=FALSE) + coord_flip() +
ggtitle("2019") +
scale_linetype_manual(values=xover_2019$line_type, name="full_name") +
scale_color_manual(values=xover_2019$colorcol, name="full_name") + theme_classic() +
labs (x = "Date", y = "Total Points") +
guides(linetype=guide_legend(ncol=2, byrow=TRUE))
ggplot(races2019) +
geom_line(aes(x=date,y=position,group=full_name,color=full_name,linetype=full_name)) + scale_color_manual(values=xover_2019$colorcol)+ scale_linetype_manual(values=xover_2019$line_type) + coord_flip() + ggtitle("2019") + theme_classic() + labs (x = "Date", y = "Position") + guides(color=guide_legend(ncol=2))
ggplot(races2021) +
geom_line(aes(x=date,y=position,group=full_name,color=full_name,linetype=full_name)) + scale_color_manual(values=xover_2021$colorcol)+ scale_linetype_manual(values=xover_2021$line_type) + coord_flip() + ggtitle("2021") + theme_classic() + labs (x = "Date", y = "Position")
ggplot(races2019) +
geom_line(aes(x=date,y=position,group=full_name,color=full_name,linetype=full_name)) + scale_color_manual(values=xover_2019$colorcol)+ scale_linetype_manual(values=xover_2019$line_type) + coord_flip() + ggtitle("2019") + theme_classic() + labs (x = "Date", y = "Position", color='Full Name') + guides(color=guide_legend(ncol=2))
ggplot(races2019) +
geom_line(aes(x=date,y=position,group=full_name,color=full_name,linetype=full_name)) + scale_color_manual(values=xover_2019$colorcol)+ scale_linetype_manual(values=xover_2019$line_type) + coord_flip() + ggtitle("2019") + theme_classic() + labs (x = "Date", y = "Position") + guides(color=guide_legend(ncol=2))
ggplot(races2021) +
geom_line(aes(x=date,y=position,group=full_name,color=full_name,linetype=full_name)) + scale_color_manual(values=xover_2021$colorcol)+ scale_linetype_manual(values=xover_2021$line_type) + coord_flip() + ggtitle("2021") + theme_classic() + labs(x = "Date", y = "Position") + theme(legend.title="Driver Names")
ggplot(races2021) +
geom_line(aes(x=date,y=position,group=full_name,color=full_name,linetype=full_name)) + scale_color_manual(values=xover_2021$colorcol)+ scale_linetype_manual(values=xover_2021$line_type) + coord_flip() + ggtitle("2021") + theme_classic() + labs(x = "Date", y = "Position") + theme(legend.title=element_text("Driver Names"))
ggplot(races2019) +
geom_line(aes(x=date,y=position,group=full_name,color=full_name,linetype=full_name)) + scale_color_manual(values=xover_2019$colorcol)+ scale_linetype_manual(values=xover_2019$line_type) + coord_flip() + ggtitle("2019") + theme_classic() + labs(x = "Date", y = "Position") + guides(color=guide_legend(ncol=2, title="Driver Names"))
ggplot(races2019) +
geom_line(aes(x=date,y=position,group=full_name,color=full_name,linetype=full_name)) + scale_color_manual(values=xover_2019$colorcol)+ scale_linetype_manual(values=xover_2019$line_type) + coord_flip() + ggtitle("2019") + theme_classic() + labs(x = "Date", y = "Position") + guides(color=guide_legend(ncol=2))
ggplot(races2019) +
geom_line(aes(x=date,y=position,group=full_name,color=full_name,linetype=full_name)) + scale_color_manual(values=xover_2019$colorcol)+ scale_linetype_manual(values=xover_2019$line_type) + coord_flip() + ggtitle("2019") + theme_classic() + labs(x = "Date", y = "Position") + guides(color=guide_legend(ncol=2), linetype=guide_legend(title="Driver Names"))
ggplot(races2019) +
geom_line(aes(x=date,y=position,group=full_name,color=full_name,linetype=full_name)) + scale_color_manual(values=xover_2019$colorcol)+ scale_linetype_manual(values=xover_2019$line_type) + coord_flip() + ggtitle("2019") + theme_classic() + labs(x = "Date", y = "Position") + guides(color=guide_legend(ncol=2), shape=guide_legend(title="Driver Names"))
ggplot(races2019) +
geom_line(aes(x=date,y=position,group=full_name,color=full_name,linetype=full_name)) + scale_color_manual(values=xover_2019$colorcol)+ scale_linetype_manual(values=xover_2019$line_type) + coord_flip() + ggtitle("2019") + theme_classic() + labs(x = "Date", y = "Position") + guides(color=guide_legend(ncol=2), fill=guide_legend(title="Driver Names"))
ggplot(races2019) +
geom_line(aes(x=date,y=position,group=full_name,color=full_name,linetype=full_name)) + scale_color_manual(values=xover_2019$colorcol)+ scale_linetype_manual(values=xover_2019$line_type) + coord_flip() + ggtitle("2019") + theme_classic() + labs(x = "Date", y = "Position") + guides(color=guide_legend(ncol=2), group=guide_legend(title="Driver Names"))
ggplot(races2019) +
geom_line(aes(x=date,y=position,group=full_name,color=full_name,linetype=full_name)) + scale_color_manual(values=xover_2019$colorcol)+ scale_linetype_manual(values=xover_2019$line_type) + coord_flip() + ggtitle("2019") + theme_classic() + labs(x = "Date", y = "Position") + guides(color=guide_legend(ncol=2))
## preparing data
df <- left_join(constructors, cstandings, by = "constructorId")
df <- left_join(df, races, by = "raceId")
## first subset
df <- subset(df, select= c(constructorId, constructorRef, name.x, constructorStandingsId,
raceId, points, position, year, circuitId, name.y, wins))
## 2019 season
season_19 <- df %>%
filter (year == 2019)
## 2021 season
season_21 <- df %>%
filter(year == 2021)
## 2019 total points
points_19 <- season_19 %>%
group_by(constructorId, name.x) %>%
summarize(totalpoints = sum(points)) %>%
arrange(desc(totalpoints)) %>%
rename('name'=name.x)
## 2021 total points
points_21 <- season_21 %>%
group_by(constructorId, name.x) %>%
summarize(totalpoints = sum(points)) %>%
arrange(desc(totalpoints)) %>%
filter(totalpoints != 0)
winnings_19 <- season_19 %>%
group_by(constructorId, name.x) %>%
summarize(totalwins = sum(wins)) %>%
arrange(desc(totalwins)) %>%
filter(totalwins != 0)
win_19_plot <- ggplot(winnings_19, aes(x = name.x, y = totalwins, fill = name.x)) +
geom_bar(position = "dodge", stat = "identity") +  theme(axis.text.x = element_text(angle = 45)) +
scale_fill_manual(values = c("Ferrari" = "#ED1C24",
"Mercedes" = "#6CD3BF",
"Red Bull" = "#1E5BC6")) +
labs (x = "Constructors", y = "Number of Wins", fill = "Constructor Names",
title = "2019 Wins by Constructor")
ggplotly(win_19_plot)
## preparing data
df <- left_join(constructors, cstandings, by = "constructorId")
df <- left_join(df, races, by = "raceId")
## first subset
df <- subset(df, select= c(constructorId, constructorRef, name.x, constructorStandingsId,
raceId, points, position, year, circuitId, name.y, wins))
## 2019 season
season_19 <- df %>%
filter (year == 2019)
## 2021 season
season_21 <- df %>%
filter(year == 2021)
## 2019 total points
points_19 <- season_19 %>%
group_by(constructorId, name.x) %>%
summarize(totalpoints = sum(points)) %>%
arrange(desc(totalpoints)) %>%
rename('name'=name.x)
## 2021 total points
points_21 <- season_21 %>%
group_by(constructorId, name.x) %>%
summarize(totalpoints = sum(points)) %>%
arrange(desc(totalpoints)) %>%
filter(totalpoints != 0)
winnings_19 <- season_19 %>%
group_by(constructorId, name.x) %>%
summarize(totalwins = sum(wins)) %>%
arrange(desc(totalwins)) %>%
filter(totalwins != 0)
win_19_plot <- ggplot(winnings_19, aes(x = name.x, y = totalwins, fill = name.x)) +
geom_bar(position = "dodge", stat = "identity") +  theme(axis.text.x = element_text(angle = 45)) +
scale_fill_manual(values = c("Ferrari" = "#ED1C24",
"Mercedes" = "#6CD3BF",
"Red Bull" = "#1E5BC6")) +
labs (x = "Constructors", y = "Number of Wins", fill = "Constructor Names",
title = "2019 Wins by Constructor")
ggplotly(win_19_plot)
winnings_21 <- season_21 %>%
group_by(constructorId, name.x) %>%
summarize(totalwins = sum(wins)) %>%
arrange(desc(totalwins)) %>%
filter(totalwins != 0)
win_21_plot <- ggplot(winnings_21, aes(x = name.x, y = totalwins, fill = name.x)) +
geom_bar(position = "dodge", stat = "identity") +  theme(axis.text.x = element_text(angle = 45)) +
scale_fill_manual(values = c("Apline F1 Team" = "#2293D1",
"McLaren" = "#F58020",
"Mercedes" = "#6CD3BF",
"Red Bull" = "#1E5BC6")) +
labs (x = "Constructors", y = "Number of Wins", fill = "Constructor Names",
title = "2021 Wins by Constructor")
ggplotly(win_21_plot)
```{r, echo=FALSE, eval=TRUE, include=TRUE, message=FALSE, warning=FALSE, cache = FALSE}
points_19_plot <- ggplot(points_19, aes(x = name, y = totalpoints, fill = name)) +
geom_bar(position = "dodge", stat = "identity") +  theme(axis.text.x = element_text(angle = 45)) +
scale_fill_manual(values = c("Alfa Romeo" = "#B12039",
"Ferrari" = "#ED1C24",
"Haas F1 Team" = "#B6BABD",
"McLaren" = "#F58020",
"Mercedes" = "#6CD3BF",
"Racing Point" = "#F596C8",
"Red Bull" = "#1E5BC6",
"Renault" = "#FFF500",
"Toro Rosso" = "#469BFF",
"Williams" = "#37BEDD")) +
labs (x = "Constructors", y = "Total Points", fill = "Constructor Names",
title = "Total Points Earned by Constructors in 2019")
points_19_plot <- ggplot(points_19, aes(x = name, y = totalpoints, fill = name)) +
geom_bar(position = "dodge", stat = "identity") +  theme(axis.text.x = element_text(angle = 45)) +
scale_fill_manual(values = c("Alfa Romeo" = "#B12039",
"Ferrari" = "#ED1C24",
"Haas F1 Team" = "#B6BABD",
"McLaren" = "#F58020",
"Mercedes" = "#6CD3BF",
"Racing Point" = "#F596C8",
"Red Bull" = "#1E5BC6",
"Renault" = "#FFF500",
"Toro Rosso" = "#469BFF",
"Williams" = "#37BEDD")) +
labs (x = "Constructors", y = "Total Points", fill = "Constructor Names",
title = "Total Points Earned by Constructors in 2019")
ggplotly(points_19_plot)
points_21_plot <- ggplot(points_21, aes(x = name.x, y = totalpoints, fill = name.x)) +
geom_bar(position = "dodge", stat = "identity") +  theme(axis.text.x = element_text(angle = 45)) +
scale_fill_manual(values = c("Alfa Romeo" = "#B12039",
"AlphaTauri" = "#4E7C9B",
"Alpine F1 Team" = "#2293D1",
"Aston Martin" = "#2D826D",
"Ferrari" = "#ED1C24",
"McLaren" = "#F58020",
"Mercedes" = "#6CD3BF",
"Red Bull" = "#1E5BC6",
"Williams" = "#37BEDD")) +
labs (x = "Constructors", y = "Total Points", fill = "Constructor Names",
title = "Total Points Earned by Constructors in 2021")
ggplotly(points_21_plot)
points_19_plot <- ggplot(points_19, aes(x = name, y = totalpoints, fill = name)) +
geom_bar(position = "dodge", stat = "identity") +  theme(axis.text.x = element_text(angle = 45)) +
scale_fill_manual(values = c("Alfa Romeo" = "#B12039",
"Ferrari" = "#ED1C24",
"Haas F1 Team" = "#B6BABD",
"McLaren" = "#F58020",
"Mercedes" = "#6CD3BF",
"Racing Point" = "#F596C8",
"Red Bull" = "#1E5BC6",
"Renault" = "#FFF500",
"Toro Rosso" = "#469BFF",
"Williams" = "#37BEDD")) +
labs (x = "Constructors", y = "Total Points", fill = "Constructor Names",
title = "Total Points Earned by Constructors in 2019")
ggplotly(points_19_plot)
points_21_plot <- ggplot(points_21, aes(x = name.x, y = totalpoints, fill = name.x)) +
geom_bar(position = "dodge", stat = "identity") +  theme(axis.text.x = element_text(angle = 45)) +
scale_fill_manual(values = c("Alfa Romeo" = "#B12039",
"AlphaTauri" = "#4E7C9B",
"Alpine F1 Team" = "#2293D1",
"Aston Martin" = "#2D826D",
"Ferrari" = "#ED1C24",
"McLaren" = "#F58020",
"Mercedes" = "#6CD3BF",
"Red Bull" = "#1E5BC6",
"Williams" = "#37BEDD")) +
labs (x = "Constructors", y = "Total Points", fill = "Constructor Names",
title = "Total Points Earned by Constructors in 2021")
ggplotly(points_21_plot)
df2 <- left_join(results, status, by = "statusId")
df2 <- left_join(results, status2, by = "statusId")
df2 <- left_join(df2, constructors, by = "constructorId")
df2 <- left_join(df2, races, by = "raceId")
## subset
df2 <- subset(df2, select = c(resultId, raceId, driverId, constructorId,
position, points, statusId, status, constructorRef, name.x,
year, circuitId, name.y))
ferrari_status_2019 <- df2 %>%
filter(name.x == "Ferrari", year == 2019) %>%
na.omit() %>%
group_by(name.x, status) %>%
summarize(status_count = n())
## compute position of labels
ferrari_status_2019 <- ferrari_status_2019 %>%
arrange(desc(status_count)) %>%
mutate(prop = status_count / sum(ferrari_status_2019$status_count) *100) %>%
mutate(ypos = cumsum(prop)- 0.5*prop )
## red bull
rb_status_2019 <- df2 %>%
filter(name.x == "Red Bull", year == 2019) %>%
na.omit() %>%
group_by(name.x, status) %>%
summarize(status_count = n())
## compute position of labels
rb_status_2019 <- rb_status_2019 %>%
arrange(desc(status_count)) %>%
mutate(prop = status_count / sum(rb_status_2019$status_count) *100) %>%
mutate(ypos = cumsum(prop)- 0.5*prop )
## mercedes
merc_status_2019 <- df2 %>%
filter(name.x == "Mercedes", year == 2019) %>%
na.omit() %>%
group_by(name.x, status) %>%
summarize(status_count = n())
## compute position of labels
merc_status_2019 <- merc_status_2019 %>%
arrange(desc(status_count)) %>%
mutate(prop = status_count / sum(merc_status_2019$status_count) *100) %>%
mutate(ypos = cumsum(prop)- 0.5*prop )
## mcclaren
mcl_status_2019 <- df2 %>%
filter(name.x == "McLaren", year == 2019) %>%
na.omit() %>%
group_by(name.x, status) %>%
summarize(status_count = n())
## compute position of labels
mcl_status_2019 <- mcl_status_2019 %>%
arrange(desc(status_count)) %>%
mutate(prop = status_count / sum(mcl_status_2019$status_count) *100) %>%
mutate(ypos = cumsum(prop)- 0.5*prop )
pie19 <- plot_ly(labels = ~status, values = ~prop,
textposition = 'inside',textinfo = 'label+percent') %>%
add_pie(data = ferrari_status_2019, name = "Ferrari", marker = list(colors = c("#1BBC00", "#FF0000",
"#ADADAD", "#47ABFF",
"#000000", "#505050")),
domain = list(row = 0, column = 0)) %>%
add_pie(data = rb_status_2019, name = "Red Bull",marker = list(colors = c("#1BBC00", "#ADADAD",
"#47ABFF", "#000000",
"#FF0000")),
domain = list(row = 0, column = 1))%>%
add_pie(data = merc_status_2019, name = "Mercedes", marker = list(colors = c("#1BBC00", "#000000",
"#47ABFF",
"#ADADAD")),
domain = list(row = 1, column = 0))%>%
add_pie(data = mcl_status_2019, name = "McLaren", marker = list(colors = c("#1BBC00", "#ADADAD",
"#47ABFF", "#FF0000",
"#505050")),
domain = list(row = 1, column = 1))%>%
layout(title = '2019 Constructor Statuses', showlegend = T, grid=list(rows=2, columns=2),
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
annotations = list(x = c(.004, .55, .0002, .55),
y = c(.78, .78, .22, .22),
text = c("Ferrari","Red Bull","Mercedes","McLaren"),
xref = "papper",
yref = "papper",
showarrow = F
)
)
pie19
## ferrari
ferrari_status_2021 <- df2 %>%
filter(name.x == "Ferrari", year == 2021) %>%
na.omit() %>%
group_by(name.x, status) %>%
summarize(status_count = n())
## compute position of labels
ferrari_status_2021 <- ferrari_status_2021 %>%
arrange(desc(status_count)) %>%
mutate(prop = status_count / sum(ferrari_status_2021$status_count) *100) %>%
mutate(ypos = cumsum(prop)- 0.5*prop )
## red bull
rb_status_2021 <- df2 %>%
filter(name.x == "Red Bull", year == 2021) %>%
na.omit() %>%
group_by(name.x, status) %>%
summarize(status_count = n())
## compute position of labels
rb_status_2021 <- rb_status_2021 %>%
arrange(desc(status_count)) %>%
mutate(prop = status_count / sum(rb_status_2021$status_count) *100) %>%
mutate(ypos = cumsum(prop)- 0.5*prop )
## mercedes
merc_status_2021 <- df2 %>%
filter(name.x == "Mercedes", year == 2021) %>%
na.omit() %>%
group_by(name.x, status) %>%
summarize(status_count = n())
## compute position of labels
merc_status_2021 <- merc_status_2021 %>%
arrange(desc(status_count)) %>%
mutate(prop = status_count / sum(merc_status_2021$status_count) *100) %>%
mutate(ypos = cumsum(prop)- 0.5*prop )
## mcclaren
mcl_status_2021 <- df2 %>%
filter(name.x == "McLaren", year == 2021) %>%
na.omit() %>%
group_by(name.x, status) %>%
summarize(status_count = n())
## compute position of labels
mcl_status_2021 <- mcl_status_2021 %>%
arrange(desc(status_count)) %>%
mutate(prop = status_count / sum(mcl_status_2021$status_count) *100) %>%
mutate(ypos = cumsum(prop)- 0.5*prop )
pie21 <- plot_ly(labels = ~status, values = ~prop,
textposition = 'inside',textinfo = 'label+percent') %>%
add_pie(data = ferrari_status_2021, name = "Ferrari", marker = list(colors = c("#1BBC00", "#ADADAD",
"#47ABFF", "#FF0000")),
domain = list(row = 0, column = 0)) %>%
add_pie(data = rb_status_2021, name = "Red Bull", marker = list(colors = c("#1BBC00", "#FF0000",
"#ADADAD", "#000000",
"#47ABFF")),
domain = list(row = 0, column = 1))%>%
add_pie(data = merc_status_2021, name = "Mercedes", marker = list(colors = c("#1BBC00", "#FF0000",
"#47ABFF", "#ADADAD")),
domain = list(row = 1, column = 0))%>%
add_pie(data = mcl_status_2021, name = "McLaren", marker = list(colors = c("#1BBC00", "#ADADAD",
"#47ABFF","#FF0000")),
domain = list(row = 1, column = 1)) %>%
layout(title = '2021 Constructor Statuses', showlegend = T, grid=list(rows=2, columns=2),
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
annotations = list(x = c(.004, .55, .0002, .55),
y = c(.78, .78, .22, .22),
text = c("Ferrari","Red Bull","Mercedes","McLaren"),
xref = "papper",
yref = "papper",
showarrow = F
)
)
pie21
