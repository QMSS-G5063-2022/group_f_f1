legend.margin = margin(c(0,0,0,0)),
legend.spacing.x = unit(0, "mm"),
legend.spacing.y = unit(0, "mm"))
races2019
xover <-
results %>%
left_join(races, by = ("raceId")) %>%
filter(year == 2019 | year == 2021) %>%
select(driverId, constructorId, year) %>%
left_join(drivers, by = ("driverId")) %>%
left_join(constructors, by = ("constructorId")) %>%
mutate(full_name = paste(forename, surname)) %>%
rename(constructor_name = name) %>%
select(driverId, full_name, constructorId, constructor_name, year, forename, surname) %>%
group_by(driverId, full_name, constructorId, constructor_name, year, forename, surname) %>%
slice(1)
xover <-
xover %>%
mutate(full_name = if_else(full_name == "Kimi RÃ¤ikkÃ¶nen", "Kimi Raikkonen", full_name),
full_name = if_else(full_name == "Nico HÃ¼lkenberg", "Nico Hulkenberg", full_name),
full_name = if_else(full_name == "Sergio PÃ©rez", "Sergio Perez", full_name))
xover_total <- xover %>%
arrange(year,constructor_name,driverId) %>%
group_by(year,constructor_name) %>%
mutate(rn=row_number()) %>%
ungroup() %>%
mutate(line_type=case_when(
rn==1 ~ 'solid',
rn==2 ~ 'dashed',
rn==3 ~ 'dotted')) %>%
mutate(colorcol=case_when(
constructor_name=='Alfa Romeo' ~ '#B12039',
constructor_name=='AlphaTauri' ~ '#4E7C9B',
constructor_name=='Alpine F1 Team' ~ '#2293D1',
constructor_name=='Aston Martin' ~ '#2D826D',
constructor_name=='Ferrari' ~ '#ED1C24',
constructor_name=='McLaren' ~ '#F58020',
constructor_name=='Mercedes' ~ '#6CD3BF',
constructor_name=='Red Bull' ~ '#1E5BC6',
constructor_name=='Williams' ~ '#37BEDD',
constructor_name=='Haas F1 Team' ~ '#B6BABD',
constructor_name=='Racing Point' ~ '#F596C8',
constructor_name=='Renault' ~ '#FFF500',
constructor_name=='Toro Rosso' ~ '#469BFF'
))
race_standings <- left_join(standings, races, by="raceId")
driver_race_standings <- left_join(race_standings, drivers, by="driverId")
races2021 <- driver_race_standings %>% filter(year==2021)
races2019 <- driver_race_standings %>% filter(year==2019)
xover_2021 <- xover_total %>% filter(year==2021) %>% arrange(full_name)
xover_2019 <- xover_total %>% filter(year==2019) %>% arrange(full_name)
xover_2019 <- xover_2019[-c(2,16),]
xover_2019 <- xover_2019 %>% filter(driverId %in% races2019$driverId)
races2021 <- left_join(races2021, xover_2021, by="driverId")
races2019 <- left_join(races2019, xover_2019, by="driverId")
xlabs2021 <- races2021 %>% arrange(date) %>% distinct(date) %>% ungroup() %>% mutate(racenum=row_number())
xlabs2019 <- races2019 %>% arrange(date) %>% distinct(date) %>% ungroup() %>% mutate(racenum=row_number())
races2021 <- left_join(races2021, xlabs2021, by='date')
races2019 <- left_join(races2019, xlabs2019, by='date')
points_2021 <- ggplot(races2021, aes(x=racenum,y=points,group=full_name,color=full_name, linetype=full_name, text=paste("<b>Driver:</b> ",full_name,"<br><b>Team: </b>",constructor_name,"<br><b>Points: </b>",points,"<br><b>Race Date:</b> ",date,"<br><b>Race: </b>",name))) + geom_point() + geom_smooth(se=FALSE) +
ggtitle("2021") +
scale_linetype_manual(values=xover_2021$line_type, name="full_name") +
scale_color_manual(values=xover_2021$colorcol, name="full_name") +
theme_classic() + xlab("Race Number") + ylab("Point Total") + theme(legend.title = element_blank(),
legend.text = element_text(size=7),
legend.margin = margin(c(0,0,0,0)),
legend.spacing.x = unit(0, "mm"),
legend.spacing.y = unit(0, "mm"))
points_2019 <- ggplot(races2019, aes(x=racenum,y=points,group=full_name,color=full_name, linetype=full_name, text=paste("<b>Driver:</b> ",full_name,"<br><b>Team: </b>",constructor_name,"<br><b>Points: </b>",points,"<br><b>Race Date:</b> ",date,"<br><b>Race: </b>",name))) + geom_point() + geom_smooth(se=FALSE) +
ggtitle("2019") +
scale_linetype_manual(values=xover_2019$line_type, name="full_name") +
scale_color_manual(values=xover_2019$colorcol, name="full_name") +
theme_classic() + xlab("Race Number") + ylab("Point Total") + theme(legend.title = element_blank(),
legend.text = element_text(size=7),
legend.margin = margin(c(0,0,0,0)),
legend.spacing.x = unit(0, "mm"),
legend.spacing.y = unit(0, "mm"))
ggplotly(points_2019, tooltip="text")
ggplotly(points_2021, tooltip="text")
ggplot(races2021) +
geom_line(aes(x=racenum,y=reorder(position,-position),group=full_name,color=full_name,linetype=full_name,text=paste("<b>Driver: </b>",full_name,"<br><b>Team:</b> ",constructor_name))) + scale_color_manual(values=xover_2021$colorcol)+ scale_linetype_manual(values=xover_2021$line_type) + ggtitle("2021") + theme_classic() + labs(x = "Date", y = "Position") +
theme(axis.text.x = element_text(angle=90, vjust=.5, hjust=1))
ggplot(races2021) +
geom_line(aes(x=racenum,y=reorder(position,-position),group=full_name,color=full_name,linetype=full_name,text=paste("<b>Driver: </b>",full_name,"<br><b>Team:</b> ",constructor_name))) + scale_color_manual(values=xover_2021$colorcol)+ scale_linetype_manual(values=xover_2021$line_type) + ggtitle("2021") + theme_classic() + labs(x = "Race Number", y = "Position") + theme(legend.title = element_blank(),
legend.text = element_text(size=7),
legend.margin = margin(c(0,0,0,0)),
legend.spacing.x = unit(0, "mm"),
legend.spacing.y = unit(0, "mm"))
ggplot(races2019) +
geom_line(aes(x=racenum,y=reorder(position,-position),group=full_name,color=full_name,linetype=full_name,text=paste("<b>Driver: </b>",full_name,"<br><b>Team:</b> ",constructor_name))) + scale_color_manual(values=xover_2019$colorcol)+ scale_linetype_manual(values=xover_2019$line_type) + ggtitle("2019") + theme_classic() + labs(x = "Race Number", y = "Position") + guides(color=guide_legend(ncol=2)) + theme(legend.title = element_blank(),
legend.text = element_text(size=7),
legend.margin = margin(c(0,0,0,0)),
legend.spacing.x = unit(0, "mm"),
legend.spacing.y = unit(0, "mm"))
ggplotly(wins_2019, tooltip = "text")
wins_2021 <- ggplot(races2021) +
geom_line(aes(x=racenum,y=reorder(position,-position),group=full_name,color=full_name,linetype=full_name,text=paste("<b>Driver: </b>",full_name,"<br><b>Team:</b> ",constructor_name))) + scale_color_manual(values=xover_2021$colorcol)+ scale_linetype_manual(values=xover_2021$line_type) + ggtitle("2021") + theme_classic() + labs(x = "Race Number", y = "Position") + theme(legend.title = element_blank(),
legend.text = element_text(size=7),
legend.margin = margin(c(0,0,0,0)),
legend.spacing.x = unit(0, "mm"),
legend.spacing.y = unit(0, "mm"))
wins_2019 <- ggplot(races2019) +
geom_line(aes(x=racenum,y=reorder(position,-position),group=full_name,color=full_name,linetype=full_name,text=paste("<b>Driver: </b>",full_name,"<br><b>Team:</b> ",constructor_name))) + scale_color_manual(values=xover_2019$colorcol)+ scale_linetype_manual(values=xover_2019$line_type) + ggtitle("2019") + theme_classic() + labs(x = "Race Number", y = "Position") + guides(color=guide_legend(ncol=2)) + theme(legend.title = element_blank(),
legend.text = element_text(size=7),
legend.margin = margin(c(0,0,0,0)),
legend.spacing.x = unit(0, "mm"),
legend.spacing.y = unit(0, "mm"))
ggplotly(wins_2019, tooltip = "text")
ggplotly(wins_2021, tooltip = "text")
ggplot(races2021, aes(x=racenum,y=points,group=full_name,color=full_name, linetype=full_name, text=paste("<b>Driver:</b> ",full_name,"<br><b>Team: </b>",constructor_name,"<br><b>Points: </b>",points,"<br><b>Race Date:</b> ",date,"<br><b>Race: </b>",name))) + geom_point() + geom_smooth(se=FALSE) +
ggtitle("2021") +
scale_linetype_manual(values=xover_2021$line_type, name="Driver") +
scale_color_manual(values=xover_2021$colorcol, name="Driver") +
theme_classic() + xlab("Race Number") + ylab("Point Total") + theme(legend.title = element_blank(),
legend.text = element_text(size=7),
legend.margin = margin(c(0,0,0,0)),
legend.spacing.x = unit(0, "mm"),
legend.spacing.y = unit(0, "mm"))
ggplot(races2021, aes(x=racenum,y=points,group=full_name,color=full_name, linetype=full_name, text=paste("<b>Driver:</b> ",full_name,"<br><b>Team: </b>",constructor_name,"<br><b>Points: </b>",points,"<br><b>Race Date:</b> ",date,"<br><b>Race: </b>",name))) + geom_point() + geom_smooth(se=FALSE) +
ggtitle("2021") +
scale_linetype_manual(values=xover_2021$line_type, name="Driver") +
scale_color_manual(values=xover_2021$colorcol, name="Driver") +
theme_classic() + xlab("Race Number") + ylab("Point Total") + theme(
legend.text = element_text(size=7),
legend.margin = margin(c(0,0,0,0)),
legend.spacing.x = unit(0, "mm"),
legend.spacing.y = unit(0, "mm"))
ggplot(races2019, aes(x=racenum,y=points,group=full_name,color=full_name, linetype=full_name, text=paste("<b>Driver:</b> ",full_name,"<br><b>Team: </b>",constructor_name,"<br><b>Points: </b>",points,"<br><b>Race Date:</b> ",date,"<br><b>Race: </b>",name))) + geom_point() + geom_smooth(se=FALSE) +
ggtitle("2019") +
scale_linetype_manual(values=xover_2019$line_type, name="full_name") +
scale_color_manual(values=xover_2019$colorcol, name="full_name") +
theme_classic() + xlab("Race Number") + theme(axis.title.y = element_blank(),
legend.text = element_text(size=7),
legend.margin = margin(c(0,0,0,0)),
legend.spacing.x = unit(0, "mm"),
legend.spacing.y = unit(0, "mm"))
library(tidyverse)
library(stringr)
library(magrittr)
library(htmltools)
library(ggplot2)
library(ggthemes)
library(DT)
library(leaflet)
library(leaflet.extras)
library(sf)
library(rgdal) # for reading shape files into R
library(rgeos)
library(maps)
# Please run following command in R-Studio to target
#  appropriate command for "crosstalk" package
#  otherwise an "All" entry will appear in filter
#  select dropdown
# devtools::install_version("crosstalk", version = "1.1.1")
library(crosstalk)
library(tidyr)
library(networkD3)
library(plotly)
library(lubridate)
#knitr::opts_chunk$set(fig.width=unit(9,"cm"), fig.height=unit(11,"cm"))
#https://sebastiansauer.github.io/figure_sizing_knitr/
# read in data
drivers <- read.csv("raw_data/drivers.csv")
qps <- read.csv("raw_data/qualifying.csv")
pitstops <- read.csv("raw_data/pit_stops.csv")
standings <- read.csv("raw_data/driver_standings.csv")
races <- read.csv("raw_data/races.csv")
results <- read.csv("raw_data/results.csv")
constructors <- read.csv("raw_data/constructors.csv")
qualifying <- read.csv("raw_data/qualifying.csv")
circuits <- read.csv("raw_data/circuits.csv")
circuit_type <- read.csv("raw_data/circuit_type.csv")
lap_times <- read.csv("raw_data/lap_times.csv")
status2 <- read.csv("raw_data/status2.csv")
cstandings <- read.csv("raw_data/constructor_standings.csv")
#helper tables
xover <-
results %>%
left_join(races, by = ("raceId")) %>%
filter(year == 2019 | year == 2021) %>%
select(driverId, constructorId, year) %>%
left_join(drivers, by = ("driverId")) %>%
left_join(constructors, by = ("constructorId")) %>%
mutate(first_initial = paste0(substr(forename, 1, 1), ".")) %>%
mutate(full_name = paste(first_initial, surname)) %>%
rename(constructor_name = name) %>%
select(driverId, full_name, constructorId, constructor_name, year) %>%
group_by(driverId, full_name, constructorId, constructor_name, year) %>%
slice(1)
xover <-
xover %>%
mutate(full_name = if_else(full_name == "K. RÃ¤ikkÃ¶nen", "K. Raikkonen", full_name),
full_name = if_else(full_name == "N. HÃ¼lkenberg", "N. Hulkenberg", full_name),
full_name = if_else(full_name == "S. PÃ©rez", "S. Perez", full_name))
# xover$full_name <- iconv(xover$full_name, from="UTF-8", to="LATIN1")
xover_total <- xover %>%
arrange(year,constructor_name,driverId) %>%
group_by(year,constructor_name) %>%
mutate(rn=row_number()) %>%
ungroup() %>%
mutate(line_type=case_when(
rn==1 ~ 'solid',
rn==2 ~ 'dashed',
rn==3 ~ 'dotted')) %>%
mutate(colorcol=case_when(
constructor_name=='Alfa Romeo' ~ '#B12039',
constructor_name=='AlphaTauri' ~ '#4E7C9B',
constructor_name=='Alpine F1 Team' ~ '#2293D1',
constructor_name=='Aston Martin' ~ '#2D826D',
constructor_name=='Ferrari' ~ '#ED1C24',
constructor_name=='McLaren' ~ '#F58020',
constructor_name=='Mercedes' ~ '#6CD3BF',
constructor_name=='Red Bull' ~ '#1E5BC6',
constructor_name=='Williams' ~ '#37BEDD',
constructor_name=='Haas F1 Team' ~ '#B6BABD',
constructor_name=='Racing Point' ~ '#F596C8',
constructor_name=='Renault' ~ '#FFF500',
constructor_name=='Toro Rosso' ~ '#469BFF'
))
circuits_joined <- circuits %>%
left_join(circuit_type) %>%
rename(circuit_name = name)
circuits_by_year <- races %>%
select(raceId, year, circuitId, name) %>%
rename(race_name = name) %>%
left_join(circuits_joined, by = c("circuitId")) %>%
mutate(circuit_type =
case_when(street_circuit == 1 ~ "street",
road_circuit == 1 ~ "street",
race_circuit == 1 ~ "race",
)
) %>%
select(year, circuitId, circuit_name, circuit_type)
skinny_races_circuits <- races %>%
rename(race_name = name) %>%
select(raceId, circuitId, race_name, year)
#library(lubridate)
incidents_by_circuit <-
results %>%
left_join(status2, by = ("statusId")) %>%
left_join(races, by = ("raceId")) %>%
rename(race_name = name) %>%
filter(year == 2019 | year == 2021) %>%
select(date, raceId, race_name, driverId, constructorId, statusId, status) %>%
left_join(xover, by = ("constructorId")) %>%
group_by(year, date, raceId, race_name, constructor_name, status) %>%
filter(status == "Collision" | status == "Accident") %>%
select(year, date, race_name, full_name, constructor_name, status)
incidents_by_circuit$date <- lubridate::ymd(incidents_by_circuit$date)
race_standings <- left_join(standings, races, by="raceId")
driver_race_standings <- left_join(race_standings, drivers, by="driverId")
races2021 <- driver_race_standings %>% filter(year==2021)
races2019 <- driver_race_standings %>% filter(year==2019)
xover_2021 <- xover_total %>% filter(year==2021) %>% arrange(full_name)
xover_2019 <- xover_total %>% filter(year==2019) %>% arrange(full_name)
xover_2019 <- xover_2019[-c(2,16),]
xover_2019 <- xover_2019 %>% filter(driverId %in% races2019$driverId)
races2021 <- left_join(races2021, xover_2021, by="driverId")
races2019 <- left_join(races2019, xover_2019, by="driverId")
## Helper tables/variables
#library(tidyr)
## sankey diagram helper tables
links_driver_2019 <-
results %>%
left_join(races, by = "raceId") %>%
filter(year == 2019) %>%
left_join(drivers, by = "driverId") %>%
unite("full_name", forename:surname, sep= " ", remove = FALSE) %>%
select(raceId, driverId, full_name, positionOrder) %>%
rename(race_position = positionOrder) %>%
left_join(qualifying, by = c("raceId" = "raceId",
"driverId" = "driverId"
)) %>%
select(raceId, full_name, race_position, position) %>%
rename(quali_position = position) %>%
mutate(quali_position = as.integer(quali_position)) %>%
mutate(race_position = if_else(race_position == "\\N", 0, as.numeric(race_position)),
quali_position = if_else(is.na(quali_position), 0, as.numeric(quali_position))) %>%
group_by(full_name, race_position, quali_position) %>%
summarise(n = n()) %>%
rename(target = race_position,
source = quali_position,
value = n) %>%
mutate(source = source,
target =  target) %>%
mutate(target = as.integer(target),
source = as.integer(source))
links_driver_2021 <-
results %>%
left_join(races, by = "raceId") %>%
filter(year == 2021) %>%
left_join(drivers, by = "driverId") %>%
unite("full_name", forename:surname, sep= " ", remove = FALSE) %>%
select(raceId, driverId, full_name, positionOrder) %>%
rename(race_position = positionOrder) %>%
left_join(qualifying, by = c("raceId" = "raceId",
"driverId" = "driverId"
)) %>%
select(raceId, full_name, race_position, position) %>%
rename(quali_position = position) %>%
mutate(quali_position = as.integer(quali_position)) %>%
mutate(race_position = if_else(race_position == "\\N", 0, as.numeric(race_position)),
quali_position = if_else(is.na(quali_position), 0, as.numeric(quali_position))) %>%
group_by(full_name, race_position, quali_position) %>%
summarise(n = n()) %>%
rename(target = race_position,
source = quali_position,
value = n) %>%
mutate(source = source,
target =  target) %>%
mutate(target = as.integer(target),
source = as.integer(source))
xlabs2021 <- races2021 %>% arrange(date) %>% distinct(date) %>% ungroup() %>% mutate(racenum=row_number())
xlabs2019 <- races2019 %>% arrange(date) %>% distinct(date) %>% ungroup() %>% mutate(racenum=row_number())
races2021 <- left_join(races2021, xlabs2021, by='date')
races2019 <- left_join(races2019, xlabs2019, by='date')
ggplot(races2019, aes(x=racenum,y=points,group=full_name,color=full_name, linetype=full_name, text=paste("<b>Driver:</b> ",full_name,"<br><b>Team: </b>",constructor_name,"<br><b>Points: </b>",points,"<br><b>Race Date:</b> ",date,"<br><b>Race: </b>",name))) + geom_point() + geom_smooth(se=FALSE) +
ggtitle("2019") +
scale_linetype_manual(values=xover_2019$line_type, name="full_name") +
scale_color_manual(values=xover_2019$colorcol, name="full_name") +
theme_classic() + xlab("Race Number") + theme(axis.title.y = element_blank(),
legend.text = element_text(size=7),
legend.margin = margin(c(0,0,0,0)),
legend.spacing.x = unit(0, "mm"),
legend.spacing.y = unit(0, "mm"))
xlabs2021 <- races2021 %>% arrange(date) %>% distinct(date) %>% ungroup() %>% mutate(racenum=row_number())
xlabs2019 <- races2019 %>% arrange(date) %>% distinct(date) %>% ungroup() %>% mutate(racenum=row_number())
races2021 <- left_join(races2021, xlabs2021, by='date')
races2019 <- left_join(races2019, xlabs2019, by='date')
points_2021 <- ggplot(races2021, aes(x=racenum,y=points,group=full_name,color=full_name, linetype=full_name, text=paste("<b>Driver:</b> ",full_name,"<br><b>Team: </b>",constructor_name,"<br><b>Points: </b>",points,"<br><b>Race Date:</b> ",date,"<br><b>Race: </b>",name))) + geom_point() + geom_smooth(se=FALSE) +
ggtitle("2021") +
scale_linetype_manual(values=xover_2021$line_type, name="Driver") +
scale_color_manual(values=xover_2021$colorcol, name="Driver") +
theme_classic() + xlab("Race Number") + theme(axis.title.y = element_blank(),
legend.title = element_text(size=8),
legend.text = element_text(size=7),
legend.margin = margin(c(0,0,0,0)),
legend.spacing.x = unit(0, "mm"),
legend.spacing.y = unit(0, "mm"))
points_2019 <- ggplot(races2019, aes(x=racenum,y=points,group=full_name,color=full_name, linetype=full_name, text=paste("<b>Driver:</b> ",full_name,"<br><b>Team: </b>",constructor_name,"<br><b>Points: </b>",points,"<br><b>Race Date:</b> ",date,"<br><b>Race: </b>",name))) + geom_point() + geom_smooth(se=FALSE) +
ggtitle("2019") +
scale_linetype_manual(values=xover_2019$line_type, name="Driver") +
scale_color_manual(values=xover_2019$colorcol, name="Driver") +
theme_classic() + xlab("Race Number") + ylab("Point Total") + theme(legend.title = element_text(size=8),
legend.text = element_text(size=7),
legend.margin = margin(c(0,0,0,0)),
legend.spacing.x = unit(0, "mm"),
legend.spacing.y = unit(0, "mm"))
points_2019_chart <- ggplotly(points_2019, tooltip="text")
#helper tables
xover <-
results %>%
left_join(races, by = ("raceId")) %>%
filter(year == 2019 | year == 2021) %>%
select(driverId, constructorId, year) %>%
left_join(drivers, by = ("driverId")) %>%
left_join(constructors, by = ("constructorId")) %>%
mutate(first_initial = paste0(substr(forename, 1, 1), ".")) %>%
mutate(full_name = paste(first_initial, surname)) %>%
rename(constructor_name = name) %>%
select(driverId, full_name, constructorId, constructor_name, year) %>%
group_by(driverId, full_name, constructorId, constructor_name, year) %>%
slice(1)
xover <-
xover %>%
mutate(full_name = if_else(full_name == "K. RÃ¤ikkÃ¶nen", "K. Raikkonen", full_name),
full_name = if_else(full_name == "N. HÃ¼lkenberg", "N. Hulkenberg", full_name),
full_name = if_else(full_name == "S. PÃ©rez", "S. Perez", full_name))
# xover$full_name <- iconv(xover$full_name, from="UTF-8", to="LATIN1")
xover_total <- xover %>%
arrange(year,constructor_name,driverId) %>%
group_by(year,constructor_name) %>%
mutate(rn=row_number()) %>%
ungroup() %>%
mutate(line_type=case_when(
rn==1 ~ 'solid',
rn==2 ~ 'dashed',
rn==3 ~ 'dotted')) %>%
mutate(colorcol=case_when(
constructor_name=='Alfa Romeo' ~ '#B12039',
constructor_name=='AlphaTauri' ~ '#4E7C9B',
constructor_name=='Alpine F1 Team' ~ '#2293D1',
constructor_name=='Aston Martin' ~ '#2D826D',
constructor_name=='Ferrari' ~ '#ED1C24',
constructor_name=='McLaren' ~ '#F58020',
constructor_name=='Mercedes' ~ '#6CD3BF',
constructor_name=='Red Bull' ~ '#1E5BC6',
constructor_name=='Williams' ~ '#37BEDD',
constructor_name=='Haas F1 Team' ~ '#B6BABD',
constructor_name=='Racing Point' ~ '#F596C8',
constructor_name=='Renault' ~ '#FFF500',
constructor_name=='Toro Rosso' ~ '#469BFF'
))
circuits_joined <- circuits %>%
left_join(circuit_type) %>%
rename(circuit_name = name)
circuits_by_year <- races %>%
select(raceId, year, circuitId, name) %>%
rename(race_name = name) %>%
left_join(circuits_joined, by = c("circuitId")) %>%
mutate(circuit_type =
case_when(street_circuit == 1 ~ "street",
road_circuit == 1 ~ "street",
race_circuit == 1 ~ "race",
)
) %>%
select(year, circuitId, circuit_name, circuit_type)
skinny_races_circuits <- races %>%
rename(race_name = name) %>%
select(raceId, circuitId, race_name, year)
#library(lubridate)
incidents_by_circuit <-
results %>%
left_join(status2, by = ("statusId")) %>%
left_join(races, by = ("raceId")) %>%
rename(race_name = name) %>%
filter(year == 2019 | year == 2021) %>%
select(date, raceId, race_name, driverId, constructorId, statusId, status) %>%
left_join(xover, by = ("constructorId")) %>%
group_by(year, date, raceId, race_name, constructor_name, status) %>%
filter(status == "Collision" | status == "Accident") %>%
select(year, date, race_name, full_name, constructor_name, status)
incidents_by_circuit$date <- lubridate::ymd(incidents_by_circuit$date)
race_standings <- left_join(standings, races, by="raceId")
driver_race_standings <- left_join(race_standings, drivers, by="driverId")
races2021 <- driver_race_standings %>% filter(year==2021)
races2019 <- driver_race_standings %>% filter(year==2019)
xover_2021 <- xover_total %>% filter(year==2021) %>% arrange(full_name)
xover_2019 <- xover_total %>% filter(year==2019) %>% arrange(full_name)
xover_2019 <- xover_2019[-c(2,16),]
xover_2019 <- xover_2019 %>% filter(driverId %in% races2019$driverId)
races2021 <- left_join(races2021, xover_2021, by="driverId")
races2019 <- left_join(races2019, xover_2019, by="driverId")
## Helper tables/variables
#library(tidyr)
## sankey diagram helper tables
links_driver_2019 <-
results %>%
left_join(races, by = "raceId") %>%
filter(year == 2019) %>%
left_join(drivers, by = "driverId") %>%
unite("full_name", forename:surname, sep= " ", remove = FALSE) %>%
select(raceId, driverId, full_name, positionOrder) %>%
rename(race_position = positionOrder) %>%
left_join(qualifying, by = c("raceId" = "raceId",
"driverId" = "driverId"
)) %>%
select(raceId, full_name, race_position, position) %>%
rename(quali_position = position) %>%
mutate(quali_position = as.integer(quali_position)) %>%
mutate(race_position = if_else(race_position == "\\N", 0, as.numeric(race_position)),
quali_position = if_else(is.na(quali_position), 0, as.numeric(quali_position))) %>%
group_by(full_name, race_position, quali_position) %>%
summarise(n = n()) %>%
rename(target = race_position,
source = quali_position,
value = n) %>%
mutate(source = source,
target =  target) %>%
mutate(target = as.integer(target),
source = as.integer(source))
links_driver_2021 <-
results %>%
left_join(races, by = "raceId") %>%
filter(year == 2021) %>%
left_join(drivers, by = "driverId") %>%
unite("full_name", forename:surname, sep= " ", remove = FALSE) %>%
select(raceId, driverId, full_name, positionOrder) %>%
rename(race_position = positionOrder) %>%
left_join(qualifying, by = c("raceId" = "raceId",
"driverId" = "driverId"
)) %>%
select(raceId, full_name, race_position, position) %>%
rename(quali_position = position) %>%
mutate(quali_position = as.integer(quali_position)) %>%
mutate(race_position = if_else(race_position == "\\N", 0, as.numeric(race_position)),
quali_position = if_else(is.na(quali_position), 0, as.numeric(quali_position))) %>%
group_by(full_name, race_position, quali_position) %>%
summarise(n = n()) %>%
rename(target = race_position,
source = quali_position,
value = n) %>%
mutate(source = source,
target =  target) %>%
mutate(target = as.integer(target),
source = as.integer(source))
xlabs2021 <- races2021 %>% arrange(date) %>% distinct(date) %>% ungroup() %>% mutate(racenum=row_number())
xlabs2019 <- races2019 %>% arrange(date) %>% distinct(date) %>% ungroup() %>% mutate(racenum=row_number())
races2021 <- left_join(races2021, xlabs2021, by='date')
races2019 <- left_join(races2019, xlabs2019, by='date')
points_2021 <- ggplot(races2021, aes(x=racenum,y=points,group=full_name,color=full_name, linetype=full_name, text=paste("<b>Driver:</b> ",full_name,"<br><b>Team: </b>",constructor_name,"<br><b>Points: </b>",points,"<br><b>Race Date:</b> ",date,"<br><b>Race: </b>",name))) + geom_point() + geom_smooth(se=FALSE) +
ggtitle("2021") +
scale_linetype_manual(values=xover_2021$line_type, name="Driver") +
scale_color_manual(values=xover_2021$colorcol, name="Driver") +
theme_classic() + xlab("Race Number") + theme(axis.title.y = element_blank(),
legend.title = element_text(size=8),
legend.text = element_text(size=7),
legend.margin = margin(c(0,0,0,0)),
legend.spacing.x = unit(0, "mm"),
legend.spacing.y = unit(0, "mm"))
points_2019 <- ggplot(races2019, aes(x=racenum,y=points,group=full_name,color=full_name, linetype=full_name, text=paste("<b>Driver:</b> ",full_name,"<br><b>Team: </b>",constructor_name,"<br><b>Points: </b>",points,"<br><b>Race Date:</b> ",date,"<br><b>Race: </b>",name))) + geom_point() + geom_smooth(se=FALSE) +
ggtitle("2019") +
scale_linetype_manual(values=xover_2019$line_type, name="Driver") +
scale_color_manual(values=xover_2019$colorcol, name="Driver") +
theme_classic() + xlab("Race Number") + ylab("Point Total") + theme(legend.title = element_text(size=8),
legend.text = element_text(size=7),
legend.margin = margin(c(0,0,0,0)),
legend.spacing.x = unit(0, "mm"),
legend.spacing.y = unit(0, "mm"))
points_2019_chart <- ggplotly(points_2019, tooltip="text")
points_2021_chart <- ggplotly(points_2021, tooltip="text")
points_2019_chart
